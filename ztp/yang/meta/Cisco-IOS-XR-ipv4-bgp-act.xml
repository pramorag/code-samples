<?xml version="1.0"?>
<Cisco-IOS-XR-ipv4-bgp-act ns="http://cisco.com/ns/yang/Cisco-IOS-XR-ipv4-bgp-act" revision="2016-10-12">
  <files>
    <file revision="2016-10-12" submodule="false">Cisco-IOS-XR-ipv4-bgp-act.yang</file>
  </files>
  <prefix>bgp-act</prefix>
  <organization>Cisco Systems, Inc.</organization>
  <import prefix="csc">Cisco-IOS-XR-types</import>
  <import prefix="inet">ietf-inet-types</import>
  <typedef name="update-group-id">
    <type>
      <pattern>(([0-9]|1[0-5])\.\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="refresh-sub-group-id">
    <type>
      <pattern>(([0-9]|1[0-5])\.\d+)(:\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="ip-netmask">
    <type>
      <type-name>inet:ip-address</type-name>
    </type>
  </typedef>
  <typedef name="ipv4-netmask">
    <type>
      <type-name>inet:ipv4-address</type-name>
    </type>
  </typedef>
  <typedef name="ipv6-netmask">
    <type>
      <type-name>inet:ipv6-address</type-name>
    </type>
  </typedef>
  <typedef name="two-byte">
    <type range="1..65535">
      <type-name>uint16</type-name>
    </type>
  </typedef>
  <typedef name="as-number">
    <type node="union">
      <type>
        <type-name>two-byte-as</type-name>
      </type>
      <type>
        <type-name>four-byte-as</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="two-byte-as">
    <type range="1..65535">
      <type-name>uint16</type-name>
    </type>
  </typedef>
  <typedef name="four-byte-as">
    <type node="union">
      <type>
        <type-name>as-four-byte</type-name>
      </type>
      <type>
        <type-name>as-plain</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="as-four-byte">
    <type>
      <pattern>(\d+\.\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="as-plain">
    <type range="65536..4294967295">
      <type-name>uint32</type-name>
    </type>
  </typedef>
  <typedef name="rd">
    <type node="union">
      <type>
        <type-name>rd-four-byte-as</type-name>
      </type>
      <type>
        <type-name>rd-two-byte-as</type-name>
      </type>
      <type>
        <type-name>rd-plain-as</type-name>
      </type>
      <type>
        <type-name>rd-ipv4-address</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="rd-four-byte-as">
    <type>
      <pattern>(\d+\.\d+:\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="rd-two-byte-as">
    <type>
      <pattern>(\d+:\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="rd-plain-as">
    <type>
      <pattern>(\d+:\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="rd-ipv4-address">
    <type>
      <pattern>(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(:\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="afi-safi-type">
    <type node="enumeration">
      <enum>all-all</enum>
      <enum>all-evpn</enum>
      <enum>all-flowspec</enum>
      <enum>all-labeled-unicast</enum>
      <enum>all-mdt</enum>
      <enum>all-mspw</enum>
      <enum>all-multicast</enum>
      <enum>all-mvpn</enum>
      <enum>all-rt-filter</enum>
      <enum>all-sr-policy</enum>
      <enum>all-tunnel</enum>
      <enum>all-unicast</enum>
      <enum>all-vpls</enum>
      <enum>all-vpws</enum>
      <enum>ipv4-all</enum>
      <enum>ipv4-flowspec</enum>
      <enum>ipv4-labeled-unicast</enum>
      <enum>ipv4-mdt</enum>
      <enum>ipv4-multicast</enum>
      <enum>ipv4-mvpn</enum>
      <enum>ipv4-rt-filter</enum>
      <enum>ipv4-sr-policy</enum>
      <enum>ipv4-tunnel</enum>
      <enum>ipv4-unicast</enum>
      <enum>ipv6-all</enum>
      <enum>ipv6-flowspec</enum>
      <enum>ipv6-labeled-unicast</enum>
      <enum>ipv6-multicast</enum>
      <enum>ipv6-mvpn</enum>
      <enum>ipv6-sr-policy</enum>
      <enum>ipv6-unicast</enum>
      <enum>l2vpn-evpn</enum>
      <enum>l2vpn-mspw</enum>
      <enum>l2vpn-vpls</enum>
      <enum>l2vpn-vpws</enum>
      <enum>link-state</enum>
      <enum>vpnv4-flowspec</enum>
      <enum>vpnv4-multicast</enum>
      <enum>vpnv4-unicast</enum>
      <enum>vpnv6-flowspec</enum>
      <enum>vpnv6-multicast</enum>
      <enum>vpnv6-unicast</enum>
    </type>
  </typedef>
  <typedef name="afi">
    <type node="enumeration">
      <enum>all</enum>
      <enum>ipv4</enum>
      <enum>ipv6</enum>
      <enum>l2vpn</enum>
      <enum>link-state</enum>
      <enum>vpnv4</enum>
      <enum>vpnv6</enum>
    </type>
  </typedef>
  <typedef name="safi">
    <type node="union">
      <type>
        <type-name>ipv4-safi</type-name>
      </type>
      <type>
        <type-name>ipv6-safi</type-name>
      </type>
      <type>
        <type-name>l2vpn-safi</type-name>
      </type>
      <type>
        <type-name>link-state-safi</type-name>
      </type>
      <type>
        <type-name>vpnv4-safi</type-name>
      </type>
      <type>
        <type-name>vpnv6-safi</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="ipv4-safi">
    <type node="enumeration">
      <enum>all</enum>
      <enum>flowspec</enum>
      <enum>labeled-unicast</enum>
      <enum>mdt</enum>
      <enum>multicast</enum>
      <enum>mvpn</enum>
      <enum>rt-filter</enum>
      <enum>sr-policy</enum>
      <enum>tunnel</enum>
      <enum>unicast</enum>
    </type>
  </typedef>
  <typedef name="ipv6-safi">
    <type node="enumeration">
      <enum>all</enum>
      <enum>flowspec</enum>
      <enum>labeled-unicast</enum>
      <enum>multicast</enum>
      <enum>mvpn</enum>
      <enum>sr-policy</enum>
      <enum>unicast</enum>
    </type>
  </typedef>
  <typedef name="l2vpn-safi">
    <type node="enumeration">
      <enum>evpn</enum>
      <enum>mspw</enum>
      <enum>vpls</enum>
      <enum>vpws</enum>
    </type>
  </typedef>
  <typedef name="link-state-safi">
    <type node="enumeration">
      <enum>link-state</enum>
    </type>
  </typedef>
  <typedef name="vpnv4-safi">
    <type node="enumeration">
      <enum>flowspec</enum>
      <enum>multicast</enum>
      <enum>unicast</enum>
    </type>
  </typedef>
  <typedef name="vpnv6-safi">
    <type node="enumeration">
      <enum>flowspec</enum>
      <enum>multicast</enum>
      <enum>unicast</enum>
    </type>
  </typedef>
  <typedef name="instance-name">
    <type node="union">
      <type node="enumeration">
        <enum>all</enum>
      </type>
      <type>
        <type-name>string</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="vrf-name">
    <type node="union">
      <type node="enumeration">
        <enum>all</enum>
      </type>
      <type>
        <type-name>string</type-name>
      </type>
    </type>
  </typedef>
  <clear-bgp-all-graceful config="true" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp * graceful</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-all-graceful>
  <clear-bgp-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp *</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-all>
  <clear-bgp-ip-addr-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;ip-addr&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-ip-addr-graceful>
  <clear-bgp-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-ip-addr-long-lived-stale>
  <clear-bgp-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-ip-addr>
  <clear-bgp-afi-safi-all-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; * soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-all-soft-in-prefix-filter>
  <clear-bgp-afi-safi-all-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; * soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-all-soft-in>
  <clear-bgp-afi-safi-all-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; * soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-all-soft-out>
  <clear-bgp-afi-safi-all-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; * soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-all-soft>
  <clear-bgp-afi-safi-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-ip-addr-long-lived-stale>
  <clear-bgp-afi-safi-ip-addr-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-ip-addr-soft-in-prefix-filter>
  <clear-bgp-afi-safi-ip-addr-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-ip-addr-soft-in>
  <clear-bgp-afi-safi-ip-addr-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-ip-addr-soft-out>
  <clear-bgp-afi-safi-ip-addr-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-ip-addr-soft>
  <clear-bgp-afi-safi-as-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-afi-safi-as-soft-in-prefix-filter>
  <clear-bgp-afi-safi-as-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-afi-safi-as-soft-in>
  <clear-bgp-afi-safi-as-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; as &lt;as-number&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-afi-safi-as-soft-out>
  <clear-bgp-afi-safi-as-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; as &lt;as-number&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-afi-safi-as-soft>
  <clear-bgp-afi-safi-dampening-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; dampening &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-afi-safi-dampening-ip-prefix>
  <clear-bgp-afi-safi-dampening config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; dampening</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-dampening>
  <clear-bgp-afi-safi-external-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; external soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-external-soft-in-prefix-filter>
  <clear-bgp-afi-safi-external-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; external soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-external-soft-in>
  <clear-bgp-afi-safi-external-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; external soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-external-soft-out>
  <clear-bgp-afi-safi-external-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; external soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-external-soft>
  <clear-bgp-afi-safi-flap-statistics-ip-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-afi-safi-flap-statistics-ip-addr-ipv4-mask>
  <clear-bgp-afi-safi-flap-statistics-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-flap-statistics-ip-addr>
  <clear-bgp-afi-safi-flap-statistics-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-afi-safi-flap-statistics-ip-prefix>
  <clear-bgp-afi-safi-flap-statistics-regexp config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics regexp &lt;regexp-pattern&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <regexp-pattern config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </regexp-pattern>
    </input>
  </clear-bgp-afi-safi-flap-statistics-regexp>
  <clear-bgp-afi-safi-flap-statistics-route-policy config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics route-policy &lt;route-policy-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <route-policy-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </route-policy-name>
    </input>
  </clear-bgp-afi-safi-flap-statistics-route-policy>
  <clear-bgp-afi-safi-flap-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-flap-statistics>
  <clear-bgp-afi-safi-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-nexthop-performance-statistics>
  <clear-bgp-afi-safi-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-nexthop-registration-ip-addr>
  <clear-bgp-afi-safi-self-originated config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; self-originated</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-self-originated>
  <clear-bgp-afi-safi-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-shutdown>
  <clear-bgp-afi-safi-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-update-outq-address-family-update-parent>
  <clear-bgp-afi-safi-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-afi-safi-update-outq-address-family>
  <clear-bgp-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-afi-safi-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-afi-safi-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-afi-safi-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-afi-safi-update-outq-neighbor-ip-addr>
  <clear-bgp-afi-safi-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-afi-safi-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-afi-safi-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-afi-safi-update-outq-update-group-sub-group>
  <clear-bgp-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-afi-safi-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-afi-safi-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-afi-safi-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-afi-safi-update-outq-update-group-update-parent>
  <clear-bgp-afi-safi-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-afi-safi-update-outq-update-group>
  <clear-bgp-as-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp as &lt;as-number&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-as-graceful>
  <clear-bgp-as config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp as &lt;as-number&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-as>
  <clear-bgp-bestpath-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-bestpath-ip-addr-ip-netmask>
  <clear-bgp-bestpath-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-bestpath-ip-addr>
  <clear-bgp-bestpath-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-bestpath-ip-prefix>
  <clear-bgp-bestpath-afi-safi-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-bestpath-afi-safi-ip-addr-ip-netmask>
  <clear-bgp-bestpath-afi-safi-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-ip-addr>
  <clear-bgp-bestpath-afi-safi-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-ip-prefix>
  <clear-bgp-bestpath-afi-safi-bridge-domain-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-bestpath-afi-safi-bridge-domain-ip-addr-ip-netmask>
  <clear-bgp-bestpath-afi-safi-bridge-domain-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-bridge-domain-ip-addr>
  <clear-bgp-bestpath-afi-safi-bridge-domain-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-bridge-domain-ip-prefix>
  <clear-bgp-bestpath-afi-safi-rd-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ip-addr-ip-netmask>
  <clear-bgp-bestpath-afi-safi-rd-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ip-addr>
  <clear-bgp-bestpath-afi-safi-rd-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ip-prefix>
  <clear-bgp-bestpath-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-bestpath-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv4-addr>
  <clear-bgp-bestpath-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv4-prefix>
  <clear-bgp-bestpath-afi-safi-rd-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ipv4-addr>
  <clear-bgp-bestpath-afi-safi-vrf-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-ipv4-addr>
  <clear-bgp-bestpath-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-bestpath-afi-safi-network>
  <clear-bgp-bestpath-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-network>
  <clear-bgp-bestpath-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-network>
  <clear-bgp-bestpath-afi-safi-rt-constraint-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;rt-constraint-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rt-constraint-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </rt-constraint-network>
    </input>
  </clear-bgp-bestpath-afi-safi-rt-constraint-network>
  <clear-bgp-bestpath-afi-safi-ipv4-tunnel-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv4-tunnel-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-tunnel-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </ipv4-tunnel-network>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv4-tunnel-network>
  <clear-bgp-bestpath-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-bestpath-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv6-addr>
  <clear-bgp-bestpath-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-ipv6-prefix>
  <clear-bgp-bestpath-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-bestpath-afi-safi-rd>
  <clear-bgp-bestpath-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf>
  <clear-bgp-bestpath-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-bestpath-afi-safi>
  <clear-bgp-bestpath-afi-safi-sr-policy-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; &lt;sr-policy-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <sr-policy-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </sr-policy-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-sr-policy-prefix>
  <clear-bgp-bestpath-afi-safi-bridge-domain-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-bridge-domain-ipv4-prefix>
  <clear-bgp-bestpath-afi-safi-rd-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ipv4-prefix>
  <clear-bgp-bestpath-afi-safi-mp2mp-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; mp2mp &lt;mp2mp&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <mp2mp config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </mp2mp>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-mp2mp-ipv4-prefix>
  <clear-bgp-bestpath-afi-safi-vrf-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-ipv4-prefix>
  <clear-bgp-bestpath-afi-safi-rd-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ipv4-addr-ipv4-mask>
  <clear-bgp-bestpath-afi-safi-vrf-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-ipv4-addr-ipv4-mask>
  <clear-bgp-bestpath-afi-safi-rd-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ipv6-addr-ipv6-netmask>
  <clear-bgp-bestpath-afi-safi-rd-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ipv6-addr>
  <clear-bgp-bestpath-afi-safi-rd-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-rd-ipv6-prefix>
  <clear-bgp-bestpath-afi-safi-vrf-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-ipv6-addr-ipv6-netmask>
  <clear-bgp-bestpath-afi-safi-vrf-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-ipv6-addr>
  <clear-bgp-bestpath-afi-safi-vrf-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-bestpath-afi-safi-vrf-ipv6-prefix>
  <clear-bgp-bestpath-vrf-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-bestpath-vrf-ip-addr-ip-netmask>
  <clear-bgp-bestpath-vrf-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-bestpath-vrf-ip-addr>
  <clear-bgp-bestpath-vrf-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-bestpath-vrf-ip-prefix>
  <clear-bgp-bestpath-vrf-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-ipv4-prefix>
  <clear-bgp-bestpath-vrf-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-bestpath-vrf-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-ipv4-addr>
  <clear-bgp-bestpath-vrf-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-network>
  <clear-bgp-bestpath-vrf-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-rd-network>
  <clear-bgp-bestpath-vrf-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-vrf-network>
  <clear-bgp-bestpath-vrf-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-bestpath-vrf-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-ipv6-addr>
  <clear-bgp-bestpath-vrf-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-ipv6-prefix>
  <clear-bgp-bestpath-vrf-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-rd>
  <clear-bgp-bestpath-vrf-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi-vrf>
  <clear-bgp-bestpath-vrf-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-bestpath-vrf-afi-safi>
  <clear-bgp-external-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp external graceful</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-external-graceful>
  <clear-bgp-external config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp external</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-external>
  <clear-bgp-instance-all-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; * graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-all-graceful>
  <clear-bgp-instance-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-all>
  <clear-bgp-instance-ip-addr-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;ip-addr&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-ip-addr-graceful>
  <clear-bgp-instance-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-ip-addr-long-lived-stale>
  <clear-bgp-instance-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-ip-addr>
  <clear-bgp-instance-afi-safi-all-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; * soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-all-soft-in-prefix-filter>
  <clear-bgp-instance-afi-safi-all-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; * soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-all-soft-in>
  <clear-bgp-instance-afi-safi-all-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; * soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-all-soft-out>
  <clear-bgp-instance-afi-safi-all-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; * soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-all-soft>
  <clear-bgp-instance-afi-safi-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-ip-addr-long-lived-stale>
  <clear-bgp-instance-afi-safi-ip-addr-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-ip-addr-soft-in-prefix-filter>
  <clear-bgp-instance-afi-safi-ip-addr-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-ip-addr-soft-in>
  <clear-bgp-instance-afi-safi-ip-addr-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-ip-addr-soft-out>
  <clear-bgp-instance-afi-safi-ip-addr-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-ip-addr-soft>
  <clear-bgp-instance-afi-safi-as-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-afi-safi-as-soft-in-prefix-filter>
  <clear-bgp-instance-afi-safi-as-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-afi-safi-as-soft-in>
  <clear-bgp-instance-afi-safi-as-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-afi-safi-as-soft-out>
  <clear-bgp-instance-afi-safi-as-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-afi-safi-as-soft>
  <clear-bgp-instance-afi-safi-dampening-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; dampening &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-afi-safi-dampening-ip-prefix>
  <clear-bgp-instance-afi-safi-dampening config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; dampening</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-dampening>
  <clear-bgp-instance-afi-safi-external-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; external soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-external-soft-in-prefix-filter>
  <clear-bgp-instance-afi-safi-external-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; external soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-external-soft-in>
  <clear-bgp-instance-afi-safi-external-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; external soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-external-soft-out>
  <clear-bgp-instance-afi-safi-external-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; external soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-external-soft>
  <clear-bgp-instance-afi-safi-flap-statistics-ip-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-ip-addr-ipv4-mask>
  <clear-bgp-instance-afi-safi-flap-statistics-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-ip-addr>
  <clear-bgp-instance-afi-safi-flap-statistics-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-ip-prefix>
  <clear-bgp-instance-afi-safi-flap-statistics-regexp config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics regexp &lt;regexp-pattern&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <regexp-pattern config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </regexp-pattern>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-regexp>
  <clear-bgp-instance-afi-safi-flap-statistics-route-policy config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics route-policy &lt;route-policy-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <route-policy-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </route-policy-name>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-route-policy>
  <clear-bgp-instance-afi-safi-flap-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics>
  <clear-bgp-instance-afi-safi-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-nexthop-performance-statistics>
  <clear-bgp-instance-afi-safi-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-nexthop-registration-ip-addr>
  <clear-bgp-instance-afi-safi-self-originated config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; self-originated</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-self-originated>
  <clear-bgp-instance-afi-safi-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-shutdown>
  <clear-bgp-instance-afi-safi-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-address-family-update-parent>
  <clear-bgp-instance-afi-safi-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-address-family>
  <clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-neighbor-ip-addr>
  <clear-bgp-instance-afi-safi-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-instance-afi-safi-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-update-group-sub-group>
  <clear-bgp-instance-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-instance-afi-safi-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-instance-afi-safi-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-update-group-update-parent>
  <clear-bgp-instance-afi-safi-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-afi-safi-update-outq-update-group>
  <clear-bgp-instance-as-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; as &lt;as-number&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-as-graceful>
  <clear-bgp-instance-as config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; as &lt;as-number&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-as>
  <clear-bgp-instance-bestpath-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-bestpath-ip-addr-ip-netmask>
  <clear-bgp-instance-bestpath-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-bestpath-ip-addr>
  <clear-bgp-instance-bestpath-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-bestpath-ip-prefix>
  <clear-bgp-instance-bestpath-afi-safi-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ip-addr-ip-netmask>
  <clear-bgp-instance-bestpath-afi-safi-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ip-addr>
  <clear-bgp-instance-bestpath-afi-safi-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ip-prefix>
  <clear-bgp-instance-bestpath-afi-safi-bridge-domain-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-bridge-domain-ip-addr-ip-netmask>
  <clear-bgp-instance-bestpath-afi-safi-bridge-domain-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-bridge-domain-ip-addr>
  <clear-bgp-instance-bestpath-afi-safi-bridge-domain-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-bridge-domain-ip-prefix>
  <clear-bgp-instance-bestpath-afi-safi-rd-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ip-addr-ip-netmask>
  <clear-bgp-instance-bestpath-afi-safi-rd-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ip-addr>
  <clear-bgp-instance-bestpath-afi-safi-rd-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ip-prefix>
  <clear-bgp-instance-bestpath-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-bestpath-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv4-addr>
  <clear-bgp-instance-bestpath-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv4-prefix>
  <clear-bgp-instance-bestpath-afi-safi-rd-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ipv4-addr>
  <clear-bgp-instance-bestpath-afi-safi-vrf-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-ipv4-addr>
  <clear-bgp-instance-bestpath-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-network>
  <clear-bgp-instance-bestpath-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-network>
  <clear-bgp-instance-bestpath-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-network>
  <clear-bgp-instance-bestpath-afi-safi-rt-constraint-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;rt-constraint-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rt-constraint-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </rt-constraint-network>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rt-constraint-network>
  <clear-bgp-instance-bestpath-afi-safi-ipv4-tunnel-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv4-tunnel-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-tunnel-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </ipv4-tunnel-network>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv4-tunnel-network>
  <clear-bgp-instance-bestpath-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-bestpath-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv6-addr>
  <clear-bgp-instance-bestpath-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-ipv6-prefix>
  <clear-bgp-instance-bestpath-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd>
  <clear-bgp-instance-bestpath-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf>
  <clear-bgp-instance-bestpath-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-bestpath-afi-safi>
  <clear-bgp-instance-bestpath-afi-safi-sr-policy-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; &lt;sr-policy-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <sr-policy-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </sr-policy-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-sr-policy-prefix>
  <clear-bgp-instance-bestpath-afi-safi-bridge-domain-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-bridge-domain-ipv4-prefix>
  <clear-bgp-instance-bestpath-afi-safi-rd-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ipv4-prefix>
  <clear-bgp-instance-bestpath-afi-safi-mp2mp-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; mp2mp &lt;mp2mp&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <mp2mp config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </mp2mp>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-mp2mp-ipv4-prefix>
  <clear-bgp-instance-bestpath-afi-safi-vrf-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-ipv4-prefix>
  <clear-bgp-instance-bestpath-afi-safi-rd-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-bestpath-afi-safi-vrf-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-bestpath-afi-safi-rd-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-bestpath-afi-safi-rd-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ipv6-addr>
  <clear-bgp-instance-bestpath-afi-safi-rd-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-rd-ipv6-prefix>
  <clear-bgp-instance-bestpath-afi-safi-vrf-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-bestpath-afi-safi-vrf-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-ipv6-addr>
  <clear-bgp-instance-bestpath-afi-safi-vrf-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-bestpath-afi-safi-vrf-ipv6-prefix>
  <clear-bgp-instance-bestpath-vrf-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-bestpath-vrf-ip-addr-ip-netmask>
  <clear-bgp-instance-bestpath-vrf-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-bestpath-vrf-ip-addr>
  <clear-bgp-instance-bestpath-vrf-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-bestpath-vrf-ip-prefix>
  <clear-bgp-instance-bestpath-vrf-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-ipv4-prefix>
  <clear-bgp-instance-bestpath-vrf-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-bestpath-vrf-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-ipv4-addr>
  <clear-bgp-instance-bestpath-vrf-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-network>
  <clear-bgp-instance-bestpath-vrf-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-rd-network>
  <clear-bgp-instance-bestpath-vrf-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-vrf-network>
  <clear-bgp-instance-bestpath-vrf-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-bestpath-vrf-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-ipv6-addr>
  <clear-bgp-instance-bestpath-vrf-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-ipv6-prefix>
  <clear-bgp-instance-bestpath-vrf-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-rd>
  <clear-bgp-instance-bestpath-vrf-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi-vrf>
  <clear-bgp-instance-bestpath-vrf-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; bestpath vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-bestpath-vrf-afi-safi>
  <clear-bgp-instance-external-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; external graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-external-graceful>
  <clear-bgp-instance-external config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; external</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-external>
  <clear-bgp-instance-afi-safi-dampening-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; dampening &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-afi-safi-dampening-ipv4-prefix>
  <clear-bgp-instance-afi-safi-flap-statistics-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-ipv4-prefix>
  <clear-bgp-instance-afi-safi-dampening-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; dampening &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-afi-safi-dampening-ipv6-prefix>
  <clear-bgp-instance-afi-safi-flap-statistics-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-afi-safi-flap-statistics-ipv6-prefix>
  <clear-bgp-instance-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-nexthop-performance-statistics>
  <clear-bgp-instance-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-nexthop-registration-ip-addr>
  <clear-bgp-instance-peer-drops-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; peer-drops *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-peer-drops-all>
  <clear-bgp-instance-peer-drops-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; peer-drops &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-peer-drops-ip-addr>
  <clear-bgp-instance-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-performance-statistics>
  <clear-bgp-instance-rpki-server-all-serial-query config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; rpki server * serial-query</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-rpki-server-all-serial-query>
  <clear-bgp-instance-rpki-server-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; rpki server *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-rpki-server-all>
  <clear-bgp-instance-rpki-server-rpki-server config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; rpki server &lt;rpki-server&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <rpki-server config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </rpki-server>
    </input>
  </clear-bgp-instance-rpki-server-rpki-server>
  <clear-bgp-instance-rpki-validation-ipv4 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; rpki validation ipv4</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-rpki-validation-ipv4>
  <clear-bgp-instance-rpki-validation-ipv6 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; rpki validation ipv6</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-rpki-validation-ipv6>
  <clear-bgp-instance-rpki-validation config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; rpki validation</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-rpki-validation>
  <clear-bgp-instance-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-shutdown>
  <clear-bgp-instance-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-update-outq-address-family-update-parent>
  <clear-bgp-instance-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-update-outq-address-family>
  <clear-bgp-instance-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-instance-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-instance-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-instance-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-update-outq-neighbor-ip-addr>
  <clear-bgp-instance-update-outq-process config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq process</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
    </input>
  </clear-bgp-instance-update-outq-process>
  <clear-bgp-instance-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-instance-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-update-outq-update-group-sub-group>
  <clear-bgp-instance-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-instance-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-instance-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-update-outq-update-group-update-parent>
  <clear-bgp-instance-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-update-outq-update-group>
  <clear-bgp-instance-version-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-version-ip-addr-ip-netmask>
  <clear-bgp-instance-version-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-version-ip-addr>
  <clear-bgp-instance-version-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-version-ip-prefix>
  <clear-bgp-instance-version-afi-safi-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-version-afi-safi-ip-addr-ip-netmask>
  <clear-bgp-instance-version-afi-safi-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-ip-addr>
  <clear-bgp-instance-version-afi-safi-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-ip-prefix>
  <clear-bgp-instance-version-afi-safi-bridge-domain-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-version-afi-safi-bridge-domain-ip-addr-ip-netmask>
  <clear-bgp-instance-version-afi-safi-bridge-domain-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-bridge-domain-ip-addr>
  <clear-bgp-instance-version-afi-safi-bridge-domain-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-bridge-domain-ip-prefix>
  <clear-bgp-instance-version-afi-safi-rd-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ip-addr-ip-netmask>
  <clear-bgp-instance-version-afi-safi-rd-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ip-addr>
  <clear-bgp-instance-version-afi-safi-rd-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ip-prefix>
  <clear-bgp-instance-version-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-version-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv4-addr>
  <clear-bgp-instance-version-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv4-prefix>
  <clear-bgp-instance-version-afi-safi-rd-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ipv4-addr>
  <clear-bgp-instance-version-afi-safi-vrf-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-ipv4-addr>
  <clear-bgp-instance-version-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-version-afi-safi-network>
  <clear-bgp-instance-version-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-network>
  <clear-bgp-instance-version-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-network>
  <clear-bgp-instance-version-afi-safi-rt-constraint-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;rt-constraint-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rt-constraint-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </rt-constraint-network>
    </input>
  </clear-bgp-instance-version-afi-safi-rt-constraint-network>
  <clear-bgp-instance-version-afi-safi-ipv4-tunnel-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv4-tunnel-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-tunnel-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </ipv4-tunnel-network>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv4-tunnel-network>
  <clear-bgp-instance-version-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-version-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv6-addr>
  <clear-bgp-instance-version-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-ipv6-prefix>
  <clear-bgp-instance-version-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-instance-version-afi-safi-rd>
  <clear-bgp-instance-version-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf>
  <clear-bgp-instance-version-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-version-afi-safi>
  <clear-bgp-instance-version-afi-safi-sr-policy-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; &lt;sr-policy-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <sr-policy-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </sr-policy-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-sr-policy-prefix>
  <clear-bgp-instance-version-afi-safi-bridge-domain-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-bridge-domain-ipv4-prefix>
  <clear-bgp-instance-version-afi-safi-rd-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ipv4-prefix>
  <clear-bgp-instance-version-afi-safi-mp2mp-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; mp2mp &lt;mp2mp&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <mp2mp config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </mp2mp>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-mp2mp-ipv4-prefix>
  <clear-bgp-instance-version-afi-safi-vrf-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-ipv4-prefix>
  <clear-bgp-instance-version-afi-safi-rd-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-version-afi-safi-vrf-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-version-afi-safi-rd-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-version-afi-safi-rd-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ipv6-addr>
  <clear-bgp-instance-version-afi-safi-rd-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-rd-ipv6-prefix>
  <clear-bgp-instance-version-afi-safi-vrf-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-version-afi-safi-vrf-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-ipv6-addr>
  <clear-bgp-instance-version-afi-safi-vrf-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-version-afi-safi-vrf-ipv6-prefix>
  <clear-bgp-instance-version-vrf-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-instance-version-vrf-ip-addr-ip-netmask>
  <clear-bgp-instance-version-vrf-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-version-vrf-ip-addr>
  <clear-bgp-instance-version-vrf-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-instance-version-vrf-ip-prefix>
  <clear-bgp-instance-version-vrf-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-ipv4-prefix>
  <clear-bgp-instance-version-vrf-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-instance-version-vrf-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-ipv4-addr>
  <clear-bgp-instance-version-vrf-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-network>
  <clear-bgp-instance-version-vrf-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-rd-network>
  <clear-bgp-instance-version-vrf-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-vrf-network>
  <clear-bgp-instance-version-vrf-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-instance-version-vrf-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-ipv6-addr>
  <clear-bgp-instance-version-vrf-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-ipv6-prefix>
  <clear-bgp-instance-version-vrf-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-rd>
  <clear-bgp-instance-version-vrf-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi-vrf>
  <clear-bgp-instance-version-vrf-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-version-vrf-afi-safi>
  <clear-bgp-instance-vrf-all-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; * graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-all-graceful>
  <clear-bgp-instance-vrf-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-all>
  <clear-bgp-instance-vrf-ip-addr-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;ip-addr&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-ip-addr-graceful>
  <clear-bgp-instance-vrf-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-ip-addr-long-lived-stale>
  <clear-bgp-instance-vrf-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-ip-addr>
  <clear-bgp-instance-vrf-as-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; as &lt;as-number&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-vrf-as-graceful>
  <clear-bgp-instance-vrf-as config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; as &lt;as-number&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-vrf-as>
  <clear-bgp-instance-vrf-external-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; external graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-external-graceful>
  <clear-bgp-instance-vrf-external config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; external</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-external>
  <clear-bgp-instance-vrf-afi-safi-all-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-all-soft-in-prefix-filter>
  <clear-bgp-instance-vrf-afi-safi-all-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-all-soft-in>
  <clear-bgp-instance-vrf-afi-safi-all-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-all-soft-out>
  <clear-bgp-instance-vrf-afi-safi-all-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-all-soft>
  <clear-bgp-instance-vrf-afi-safi-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-ip-addr-long-lived-stale>
  <clear-bgp-instance-vrf-afi-safi-ip-addr-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-ip-addr-soft-in-prefix-filter>
  <clear-bgp-instance-vrf-afi-safi-ip-addr-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-ip-addr-soft-in>
  <clear-bgp-instance-vrf-afi-safi-ip-addr-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-ip-addr-soft-out>
  <clear-bgp-instance-vrf-afi-safi-ip-addr-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-ip-addr-soft>
  <clear-bgp-instance-vrf-afi-safi-as-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-vrf-afi-safi-as-soft-in-prefix-filter>
  <clear-bgp-instance-vrf-afi-safi-as-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-vrf-afi-safi-as-soft-in>
  <clear-bgp-instance-vrf-afi-safi-as-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-vrf-afi-safi-as-soft-out>
  <clear-bgp-instance-vrf-afi-safi-as-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-instance-vrf-afi-safi-as-soft>
  <clear-bgp-instance-vrf-afi-safi-dampening-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; dampening &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-vrf-afi-safi-dampening-ipv4-prefix>
  <clear-bgp-instance-vrf-afi-safi-dampening config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; dampening</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-dampening>
  <clear-bgp-instance-vrf-afi-safi-external-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-external-soft-in-prefix-filter>
  <clear-bgp-instance-vrf-afi-safi-external-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-external-soft-in>
  <clear-bgp-instance-vrf-afi-safi-external-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-external-soft-out>
  <clear-bgp-instance-vrf-afi-safi-external-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-external-soft>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics-ip-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics-ip-addr-ipv4-mask>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics-ip-addr>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics-ipv4-prefix>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics-regexp config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics regexp &lt;regexp-pattern&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <regexp-pattern config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </regexp-pattern>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics-regexp>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics-route-policy config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics route-policy &lt;route-policy-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <route-policy-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </route-policy-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics-route-policy>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics>
  <clear-bgp-instance-vrf-afi-safi-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-nexthop-performance-statistics>
  <clear-bgp-instance-vrf-afi-safi-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-nexthop-registration-ip-addr>
  <clear-bgp-instance-vrf-afi-safi-self-originated config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; self-originated</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-self-originated>
  <clear-bgp-instance-vrf-afi-safi-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-shutdown>
  <clear-bgp-instance-vrf-afi-safi-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-address-family-update-parent>
  <clear-bgp-instance-vrf-afi-safi-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-address-family>
  <clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-neighbor-ip-addr>
  <clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group>
  <clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-instance-vrf-afi-safi-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-update-group-update-parent>
  <clear-bgp-instance-vrf-afi-safi-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-vrf-afi-safi-update-outq-update-group>
  <clear-bgp-instance-vrf-afi-safi-dampening-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; dampening &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-vrf-afi-safi-dampening-ipv6-prefix>
  <clear-bgp-instance-vrf-afi-safi-flap-statistics-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-instance-vrf-afi-safi-flap-statistics-ipv6-prefix>
  <clear-bgp-instance-vrf-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-nexthop-performance-statistics>
  <clear-bgp-instance-vrf-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-nexthop-registration-ip-addr>
  <clear-bgp-instance-vrf-peer-drops-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; peer-drops *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-peer-drops-all>
  <clear-bgp-instance-vrf-peer-drops-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; peer-drops &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-peer-drops-ip-addr>
  <clear-bgp-instance-vrf-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-performance-statistics>
  <clear-bgp-instance-vrf-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-shutdown>
  <clear-bgp-instance-vrf-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-update-outq-address-family-update-parent>
  <clear-bgp-instance-vrf-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-update-outq-address-family>
  <clear-bgp-instance-vrf-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-instance-vrf-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-instance-vrf-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-instance-vrf-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-instance-vrf-update-outq-neighbor-ip-addr>
  <clear-bgp-instance-vrf-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-vrf-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-instance-vrf-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-instance-vrf-update-outq-update-group-sub-group>
  <clear-bgp-instance-vrf-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-vrf-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-instance-vrf-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-instance-vrf-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-instance-vrf-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-vrf-update-outq-update-group-update-parent>
  <clear-bgp-instance-vrf-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-instance-vrf-update-outq-update-group>
  <clear-bgp-afi-safi-dampening-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; dampening &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-afi-safi-dampening-ipv4-prefix>
  <clear-bgp-afi-safi-flap-statistics-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-afi-safi-flap-statistics-ipv4-prefix>
  <clear-bgp-afi-safi-dampening-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; dampening &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-afi-safi-dampening-ipv6-prefix>
  <clear-bgp-afi-safi-flap-statistics-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp &lt;afi-safi-name&gt; flap-statistics &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-afi-safi-flap-statistics-ipv6-prefix>
  <clear-bgp-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp nexthop performance-statistics</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-nexthop-performance-statistics>
  <clear-bgp-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-nexthop-registration-ip-addr>
  <clear-bgp-peer-drops-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp peer-drops *</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-peer-drops-all>
  <clear-bgp-peer-drops-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp peer-drops &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-peer-drops-ip-addr>
  <clear-bgp-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp performance-statistics</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-performance-statistics>
  <clear-bgp-rpki-server-all-serial-query config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp rpki server * serial-query</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-rpki-server-all-serial-query>
  <clear-bgp-rpki-server-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp rpki server *</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-rpki-server-all>
  <clear-bgp-rpki-server-rpki-server config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp rpki server &lt;rpki-server&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <rpki-server config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </rpki-server>
    </input>
  </clear-bgp-rpki-server-rpki-server>
  <clear-bgp-rpki-validation-ipv4 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp rpki validation ipv4</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-rpki-validation-ipv4>
  <clear-bgp-rpki-validation-ipv6 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp rpki validation ipv6</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-rpki-validation-ipv6>
  <clear-bgp-rpki-validation config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp rpki validation</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-rpki-validation>
  <clear-bgp-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp shutdown</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-shutdown>
  <clear-bgp-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq address-family update-parent</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-update-outq-address-family-update-parent>
  <clear-bgp-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq address-family</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-update-outq-address-family>
  <clear-bgp-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-update-outq-neighbor-ip-addr>
  <clear-bgp-update-outq-process config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq process</xr-cli-command>
    <input config="false" is-key="false" node="input"/>
    <output config="false" is-key="false" node="output"/>
  </clear-bgp-update-outq-process>
  <clear-bgp-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-update-outq-update-group-sub-group>
  <clear-bgp-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-update-outq-update-group-update-parent>
  <clear-bgp-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-update-outq-update-group>
  <clear-bgp-version-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-version-ip-addr-ip-netmask>
  <clear-bgp-version-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-version-ip-addr>
  <clear-bgp-version-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-version-ip-prefix>
  <clear-bgp-version-afi-safi-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-version-afi-safi-ip-addr-ip-netmask>
  <clear-bgp-version-afi-safi-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-version-afi-safi-ip-addr>
  <clear-bgp-version-afi-safi-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-version-afi-safi-ip-prefix>
  <clear-bgp-version-afi-safi-bridge-domain-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-version-afi-safi-bridge-domain-ip-addr-ip-netmask>
  <clear-bgp-version-afi-safi-bridge-domain-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-version-afi-safi-bridge-domain-ip-addr>
  <clear-bgp-version-afi-safi-bridge-domain-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-version-afi-safi-bridge-domain-ip-prefix>
  <clear-bgp-version-afi-safi-rd-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-version-afi-safi-rd-ip-addr-ip-netmask>
  <clear-bgp-version-afi-safi-rd-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-version-afi-safi-rd-ip-addr>
  <clear-bgp-version-afi-safi-rd-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-version-afi-safi-rd-ip-prefix>
  <clear-bgp-version-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-version-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-version-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-version-afi-safi-ipv4-addr>
  <clear-bgp-version-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-version-afi-safi-ipv4-prefix>
  <clear-bgp-version-afi-safi-rd-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-version-afi-safi-rd-ipv4-addr>
  <clear-bgp-version-afi-safi-vrf-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-version-afi-safi-vrf-ipv4-addr>
  <clear-bgp-version-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-version-afi-safi-network>
  <clear-bgp-version-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-version-afi-safi-rd-network>
  <clear-bgp-version-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-version-afi-safi-vrf-network>
  <clear-bgp-version-afi-safi-rt-constraint-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;rt-constraint-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rt-constraint-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </rt-constraint-network>
    </input>
  </clear-bgp-version-afi-safi-rt-constraint-network>
  <clear-bgp-version-afi-safi-ipv4-tunnel-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv4-tunnel-network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-tunnel-network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </ipv4-tunnel-network>
    </input>
  </clear-bgp-version-afi-safi-ipv4-tunnel-network>
  <clear-bgp-version-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-version-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-version-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-version-afi-safi-ipv6-addr>
  <clear-bgp-version-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-version-afi-safi-ipv6-prefix>
  <clear-bgp-version-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-version-afi-safi-rd>
  <clear-bgp-version-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-version-afi-safi-vrf>
  <clear-bgp-version-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-version-afi-safi>
  <clear-bgp-version-afi-safi-sr-policy-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; &lt;sr-policy-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <sr-policy-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </sr-policy-prefix>
    </input>
  </clear-bgp-version-afi-safi-sr-policy-prefix>
  <clear-bgp-version-afi-safi-bridge-domain-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; bridge-domain &lt;bridge-domain-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <bridge-domain-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </bridge-domain-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-version-afi-safi-bridge-domain-ipv4-prefix>
  <clear-bgp-version-afi-safi-rd-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-version-afi-safi-rd-ipv4-prefix>
  <clear-bgp-version-afi-safi-mp2mp-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; mp2mp &lt;mp2mp&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <mp2mp config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </mp2mp>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-version-afi-safi-mp2mp-ipv4-prefix>
  <clear-bgp-version-afi-safi-vrf-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-version-afi-safi-vrf-ipv4-prefix>
  <clear-bgp-version-afi-safi-rd-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-version-afi-safi-rd-ipv4-addr-ipv4-mask>
  <clear-bgp-version-afi-safi-vrf-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-version-afi-safi-vrf-ipv4-addr-ipv4-mask>
  <clear-bgp-version-afi-safi-rd-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-version-afi-safi-rd-ipv6-addr-ipv6-netmask>
  <clear-bgp-version-afi-safi-rd-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-version-afi-safi-rd-ipv6-addr>
  <clear-bgp-version-afi-safi-rd-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-version-afi-safi-rd-ipv6-prefix>
  <clear-bgp-version-afi-safi-vrf-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-version-afi-safi-vrf-ipv6-addr-ipv6-netmask>
  <clear-bgp-version-afi-safi-vrf-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-version-afi-safi-vrf-ipv6-addr>
  <clear-bgp-version-afi-safi-vrf-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-version-afi-safi-vrf-ipv6-prefix>
  <clear-bgp-version-vrf-ip-addr-ip-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;ip-addr&gt; &lt;ip-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ip-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ip-netmask</type-name>
        </type>
      </ip-netmask>
    </input>
  </clear-bgp-version-vrf-ip-addr-ip-netmask>
  <clear-bgp-version-vrf-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-version-vrf-ip-addr>
  <clear-bgp-version-vrf-ip-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;ip-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-prefix</type-name>
        </type>
      </ip-prefix>
    </input>
  </clear-bgp-version-vrf-ip-prefix>
  <clear-bgp-version-vrf-afi-safi-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-version-vrf-afi-safi-ipv4-prefix>
  <clear-bgp-version-vrf-afi-safi-ipv4-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-version-vrf-afi-safi-ipv4-addr-ipv4-mask>
  <clear-bgp-version-vrf-afi-safi-ipv4-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv4-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-address</type-name>
        </type>
      </ipv4-addr>
    </input>
  </clear-bgp-version-vrf-afi-safi-ipv4-addr>
  <clear-bgp-version-vrf-afi-safi-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-version-vrf-afi-safi-network>
  <clear-bgp-version-vrf-afi-safi-rd-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-version-vrf-afi-safi-rd-network>
  <clear-bgp-version-vrf-afi-safi-vrf-network config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt; &lt;network&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
      <network config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </network>
    </input>
  </clear-bgp-version-vrf-afi-safi-vrf-network>
  <clear-bgp-version-vrf-afi-safi-ipv6-addr-ipv6-netmask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt; &lt;ipv6-netmask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
      <ipv6-netmask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv6-netmask</type-name>
        </type>
      </ipv6-netmask>
    </input>
  </clear-bgp-version-vrf-afi-safi-ipv6-addr-ipv6-netmask>
  <clear-bgp-version-vrf-afi-safi-ipv6-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-address</type-name>
        </type>
      </ipv6-addr>
    </input>
  </clear-bgp-version-vrf-afi-safi-ipv6-addr>
  <clear-bgp-version-vrf-afi-safi-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-version-vrf-afi-safi-ipv6-prefix>
  <clear-bgp-version-vrf-afi-safi-rd config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; rd &lt;rd&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <rd config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>rd</type-name>
        </type>
      </rd>
    </input>
  </clear-bgp-version-vrf-afi-safi-rd>
  <clear-bgp-version-vrf-afi-safi-vrf config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; vrf &lt;vrf-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <vrf-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </vrf-name>
    </input>
  </clear-bgp-version-vrf-afi-safi-vrf>
  <clear-bgp-version-vrf-afi-safi config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp version vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-version-vrf-afi-safi>
  <clear-bgp-vrf-all-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; * graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-all-graceful>
  <clear-bgp-instance-vrf-rpki-validation-ipv4 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; rpki validation ipv4</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-rpki-validation-ipv4>
  <clear-bgp-instance-vrf-rpki-validation-ipv6 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; rpki validation ipv6</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-rpki-validation-ipv6>
  <clear-bgp-instance-vrf-rpki-validation config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp instance &lt;instance-name&gt; vrf &lt;vrf-all&gt; rpki validation</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <instance-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>instance-name</type-name>
        </type>
      </instance-name>
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-instance-vrf-rpki-validation>
  <clear-bgp-vrf-rpki-validation-ipv4 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; rpki validation ipv4</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-rpki-validation-ipv4>
  <clear-bgp-vrf-rpki-validation-ipv6 config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; rpki validation ipv6</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-rpki-validation-ipv6>
  <clear-bgp-vrf-rpki-validation config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; rpki validation</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-rpki-validation>
  <clear-bgp-vrf-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-all>
  <clear-bgp-vrf-ip-addr-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;ip-addr&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-ip-addr-graceful>
  <clear-bgp-vrf-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-ip-addr-long-lived-stale>
  <clear-bgp-vrf-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-ip-addr>
  <clear-bgp-vrf-as-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; as &lt;as-number&gt; graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-vrf-as-graceful>
  <clear-bgp-vrf-as config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; as &lt;as-number&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-vrf-as>
  <clear-bgp-vrf-external-graceful config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; external graceful</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-external-graceful>
  <clear-bgp-vrf-external config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; external</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-external>
  <clear-bgp-vrf-afi-safi-all-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-all-soft-in-prefix-filter>
  <clear-bgp-vrf-afi-safi-all-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-all-soft-in>
  <clear-bgp-vrf-afi-safi-all-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-all-soft-out>
  <clear-bgp-vrf-afi-safi-all-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; * soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-all-soft>
  <clear-bgp-vrf-afi-safi-ip-addr-long-lived-stale config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; long-lived-stale</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-ip-addr-long-lived-stale>
  <clear-bgp-vrf-afi-safi-ip-addr-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-ip-addr-soft-in-prefix-filter>
  <clear-bgp-vrf-afi-safi-ip-addr-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-ip-addr-soft-in>
  <clear-bgp-vrf-afi-safi-ip-addr-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-ip-addr-soft-out>
  <clear-bgp-vrf-afi-safi-ip-addr-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; &lt;ip-addr&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-ip-addr-soft>
  <clear-bgp-vrf-afi-safi-as-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-vrf-afi-safi-as-soft-in-prefix-filter>
  <clear-bgp-vrf-afi-safi-as-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-vrf-afi-safi-as-soft-in>
  <clear-bgp-vrf-afi-safi-as-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-vrf-afi-safi-as-soft-out>
  <clear-bgp-vrf-afi-safi-as-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; as &lt;as-number&gt; soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <as-number config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>as-number</type-name>
        </type>
      </as-number>
    </input>
  </clear-bgp-vrf-afi-safi-as-soft>
  <clear-bgp-vrf-afi-safi-dampening-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; dampening &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-vrf-afi-safi-dampening-ipv4-prefix>
  <clear-bgp-vrf-afi-safi-dampening config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; dampening</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-dampening>
  <clear-bgp-vrf-afi-safi-external-soft-in-prefix-filter config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft in prefix-filter</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-external-soft-in-prefix-filter>
  <clear-bgp-vrf-afi-safi-external-soft-in config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft in</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-external-soft-in>
  <clear-bgp-vrf-afi-safi-external-soft-out config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft out</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-external-soft-out>
  <clear-bgp-vrf-afi-safi-external-soft config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; external soft</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-external-soft>
  <clear-bgp-vrf-afi-safi-flap-statistics-ip-addr-ipv4-mask config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt; &lt;ipv4-mask&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
      <ipv4-mask config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>ipv4-netmask</type-name>
        </type>
      </ipv4-mask>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics-ip-addr-ipv4-mask>
  <clear-bgp-vrf-afi-safi-flap-statistics-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics-ip-addr>
  <clear-bgp-vrf-afi-safi-flap-statistics-ipv4-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ipv4-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv4-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv4-prefix</type-name>
        </type>
      </ipv4-prefix>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics-ipv4-prefix>
  <clear-bgp-vrf-afi-safi-flap-statistics-regexp config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics regexp &lt;regexp-pattern&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <regexp-pattern config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </regexp-pattern>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics-regexp>
  <clear-bgp-vrf-afi-safi-flap-statistics-route-policy config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics route-policy &lt;route-policy-name&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <route-policy-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>string</type-name>
        </type>
      </route-policy-name>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics-route-policy>
  <clear-bgp-vrf-afi-safi-flap-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics>
  <clear-bgp-vrf-afi-safi-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-nexthop-performance-statistics>
  <clear-bgp-vrf-afi-safi-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-nexthop-registration-ip-addr>
  <clear-bgp-vrf-afi-safi-self-originated config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; self-originated</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-self-originated>
  <clear-bgp-vrf-afi-safi-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-shutdown>
  <clear-bgp-vrf-afi-safi-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-address-family-update-parent>
  <clear-bgp-vrf-afi-safi-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-address-family>
  <clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-neighbor-ip-addr>
  <clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group>
  <clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-vrf-afi-safi-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-update-group-update-parent>
  <clear-bgp-vrf-afi-safi-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-vrf-afi-safi-update-outq-update-group>
  <clear-bgp-vrf-afi-safi-dampening-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; dampening &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-vrf-afi-safi-dampening-ipv6-prefix>
  <clear-bgp-vrf-afi-safi-flap-statistics-ipv6-prefix config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; &lt;afi-safi-name&gt; flap-statistics &lt;ipv6-prefix&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <afi-safi-name config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>afi-safi-type</type-name>
        </type>
      </afi-safi-name>
      <ipv6-prefix config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ipv6-prefix</type-name>
        </type>
      </ipv6-prefix>
    </input>
  </clear-bgp-vrf-afi-safi-flap-statistics-ipv6-prefix>
  <clear-bgp-vrf-nexthop-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; nexthop performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-nexthop-performance-statistics>
  <clear-bgp-vrf-nexthop-registration-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; nexthop registration &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-nexthop-registration-ip-addr>
  <clear-bgp-vrf-peer-drops-all config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; peer-drops *</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-peer-drops-all>
  <clear-bgp-vrf-peer-drops-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; peer-drops &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-peer-drops-ip-addr>
  <clear-bgp-vrf-performance-statistics config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; performance-statistics</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-performance-statistics>
  <clear-bgp-vrf-shutdown config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; shutdown</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-shutdown>
  <clear-bgp-vrf-update-outq-address-family-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq address-family update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-update-outq-address-family-update-parent>
  <clear-bgp-vrf-update-outq-address-family config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq address-family</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
    </input>
  </clear-bgp-vrf-update-outq-address-family>
  <clear-bgp-vrf-update-outq-neighbor-ip-addr-refresh-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt; refresh update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-update-outq-neighbor-ip-addr-refresh-update-parent>
  <clear-bgp-vrf-update-outq-neighbor-ip-addr-refresh config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt; refresh</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-update-outq-neighbor-ip-addr-refresh>
  <clear-bgp-vrf-update-outq-neighbor-ip-addr-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-update-outq-neighbor-ip-addr-update-parent>
  <clear-bgp-vrf-update-outq-neighbor-ip-addr config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq neighbor &lt;ip-addr&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <ip-addr config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>inet:ip-address</type-name>
        </type>
      </ip-addr>
    </input>
  </clear-bgp-vrf-update-outq-neighbor-ip-addr>
  <clear-bgp-vrf-update-outq-update-group-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-vrf-update-outq-update-group-sub-group-update-parent>
  <clear-bgp-vrf-update-outq-update-group-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </sub-group>
    </input>
  </clear-bgp-vrf-update-outq-update-group-sub-group>
  <clear-bgp-vrf-update-outq-update-group-sub-group-refresh-sub-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-vrf-update-outq-update-group-sub-group-refresh-sub-group-update-parent>
  <clear-bgp-vrf-update-outq-update-group-sub-group-refresh-sub-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; sub-group &lt;refresh-sub-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
      <refresh-sub-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>refresh-sub-group-id</type-name>
        </type>
      </refresh-sub-group>
    </input>
  </clear-bgp-vrf-update-outq-update-group-sub-group-refresh-sub-group>
  <clear-bgp-vrf-update-outq-update-group-update-parent config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt; update-parent</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-vrf-update-outq-update-group-update-parent>
  <clear-bgp-vrf-update-outq-update-group config="false" is-key="false" node="rpc" presence="false">
    <xr-task>bgp</xr-task>
    <xr-cli-command>clear bgp vrf &lt;vrf-all&gt; update outq update-group &lt;update-group&gt;</xr-cli-command>
    <output config="false" is-key="false" node="output"/>
    <input config="false" is-key="false" node="input">
      <vrf-all config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>vrf-name</type-name>
        </type>
      </vrf-all>
      <update-group config="false" is-key="false" is-yang-key="false" node="leaf">
        <xr-task>bgp</xr-task>
        <mandatory>true</mandatory>
        <type>
          <type-name>update-group-id</type-name>
        </type>
      </update-group>
    </input>
  </clear-bgp-vrf-update-outq-update-group>
</Cisco-IOS-XR-ipv4-bgp-act>
