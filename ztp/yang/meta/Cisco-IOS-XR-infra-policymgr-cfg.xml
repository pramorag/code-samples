<?xml version="1.0"?>
<Cisco-IOS-XR-infra-policymgr-cfg ns="http://cisco.com/ns/yang/Cisco-IOS-XR-infra-policymgr-cfg" revision="2018-09-30">
  <files>
    <file revision="2018-09-30" submodule="false">Cisco-IOS-XR-infra-policymgr-cfg.yang</file>
  </files>
  <prefix>infra-policymgr-cfg</prefix>
  <organization>Cisco Systems, Inc.</organization>
  <import prefix="inet">ietf-inet-types</import>
  <typedef name="mac-address">
    <type>
      <pattern>[0-9a-fA-F]{4}(\.[0-9a-fA-F]{4}){2}</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Class-map-type">
    <type node="enumeration">
      <enum value="1">qos</enum>
      <enum value="2">pbr</enum>
      <enum value="3">traffic</enum>
      <enum value="4">control</enum>
    </type>
  </typedef>
  <typedef name="Alarm-severity">
    <type>
      <pattern>(informational)|(notification)|(warning)|(error)|(critical)|(alert)|(emergency)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Policy-map-type">
    <type node="enumeration">
      <enum value="1">qos</enum>
      <enum value="2">pbr</enum>
      <enum value="3">traffic</enum>
      <enum value="4">subscriber-control</enum>
      <enum value="6">redirect</enum>
      <enum value="7">flow-monitor</enum>
    </type>
  </typedef>
  <typedef name="Service-policy-type">
    <type>
      <pattern>(PBR)|(QOS)|(REDIRECT)|(TRAFFIC)|(pbr)|(qos)|(redirect)|(traffic)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Pmap-class-map-type">
    <type node="enumeration">
      <enum value="1">qos</enum>
      <enum value="2">traffic</enum>
      <enum value="3">subscriber-control</enum>
    </type>
  </typedef>
  <typedef name="Bandwidth-units">
    <type>
      <pattern>(bps)|(kbps)|(mbps)|(gbps)|(percent)|(per-million)|(per-thousand)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Bandwidth-remaining-units">
    <type>
      <pattern>(percent)|(ratio)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Rate-units">
    <type>
      <pattern>(bps)|(kbps)|(mbps)|(gbps)|(pps)|(percent)|(cellsps)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Cac-rate-units">
    <type>
      <pattern>(bps)|(kbps)|(mbps)|(gbps)|(cellsps)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Queue-units">
    <type>
      <pattern>(bytes)|(kbytes)|(mbytes)|(gbytes)|(us)|(ms)|(packets)|(cells)|(percent)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Threshold-units">
    <type>
      <pattern>(bytes)|(kbytes)|(mbytes)|(gbytes)|(us)|(ms)|(packets)|(cells)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Pfc-units">
    <type>
      <pattern>(bytes)|(kbytes)|(mbytes)|(gbytes)|(us)|(ms)|(packets)|(cells)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Float-str">
    <type>
      <pattern>[0-9]+(\.[0-9]+)?</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Dscp">
    <type>
      <pattern>([0-9]|[1-5][0-9]|6[0-3])|(af11)|(af12)|(af13)|(af21)|(af22)|(af23)|(af31)|(af32)|(af33)|(af41)|(af42)|(af43)|(ef)|(default)|(cs1)|(cs2)|(cs3)|(cs4)|(cs5)|(cs6)|(cs7)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Dscp-range">
    <type>
      <pattern>([0-9]|[1-5][0-9]|6[0-3])|(([0-9]|[1-5][0-9]|6[0-3])-([0-9]|[1-5][0-9]|6[0-3]))|(af11)|(af12)|(af13)|(af21)|(af22)|(af23)|(af31)|(af32)|(af33)|(af41)|(af42)|(af43)|(ef)|(default)|(cs1)|(cs2)|(cs3)|(cs4)|(cs5)|(cs6)|(cs7)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Num-range">
    <type>
      <pattern>(\d+)|(\d+\-\d+)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Protocol">
    <type>
      <pattern>([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])|(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\-([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]))|((ahp)|(dhcpv4)|(dhcpv6)|(eigrp)|(esp)|(gre)|(icmp)|(igmp)|(igrp)|(ipinip)|(ipv4)|(ipv6)|(ipv6icmp)|(mpls)|(nos)|(ospf)|(pcp)|(pim)|(ppp)|(sctp)|(tcp)|(udp))</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Ethertype">
    <type>
      <pattern>((153[6-9]|15[4-9][0-9]|1[6-9][0-9][0-9]|[2-9][0-9][0-9][0-9])|([1-5][0-9][0-9][0-9][0-9]|6[0-4][0-9][0-9][0-9])|(65[0-4][0-9][0-9]|655[0-2][0-9]|6553[0-5]))|((arp)|(ipv4)|(ipv6))</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Precedence">
    <type node="union">
      <type range="0..7">
        <type-name>uint8</type-name>
      </type>
      <type>
        <pattern>(critical)|(flash)|(flash-override)|(immediate)|(internet)|(network)|(priority)|(routine)</pattern>
        <type-name>string</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="Cos">
    <type range="0..7">
      <type-name>uint8</type-name>
    </type>
  </typedef>
  <typedef name="Idle-timeout-number">
    <type range="10..2550">
      <type-name>uint16</type-name>
    </type>
  </typedef>
  <typedef name="Idle-timeout-string">
    <type>
      <pattern>(None)|(none)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <typedef name="Idle-timeout">
    <type node="union">
      <type>
        <type-name>Idle-timeout-number</type-name>
      </type>
      <type>
        <type-name>Idle-timeout-string</type-name>
      </type>
    </type>
  </typedef>
  <typedef name="Event-type">
    <type node="enumeration">
      <enum>account-logoff</enum>
      <enum>account-logon</enum>
      <enum>authentication-failure</enum>
      <enum>authentication-no-response</enum>
      <enum>authorization-failure</enum>
      <enum>authorization-no-response</enum>
      <enum>credit-exhausted</enum>
      <enum>exception</enum>
      <enum>idle-timeout</enum>
      <enum>quota-depleted</enum>
      <enum>service-start</enum>
      <enum>service-stop</enum>
      <enum>session-activate</enum>
      <enum>session-start</enum>
      <enum>session-stop</enum>
      <enum>timer-expiry</enum>
    </type>
  </typedef>
  <typedef name="Execution-strategy">
    <type node="enumeration">
      <enum>do-all</enum>
      <enum>do-until-failure</enum>
      <enum>do-until-success</enum>
    </type>
  </typedef>
  <typedef name="Authorize-identifier">
    <type node="enumeration">
      <enum>circuit-id</enum>
      <enum>dhcp-client-id</enum>
      <enum>remote-id</enum>
      <enum>source-address-ipv4</enum>
      <enum>source-address-ipv6</enum>
      <enum>source-address-mac</enum>
      <enum>username</enum>
    </type>
  </typedef>
  <typedef name="dhcp-client-id-options">
    <type>
      <pattern>(none)|(ascii)|(hex)</pattern>
      <type-name>string</type-name>
    </type>
  </typedef>
  <policy-manager config="true" is-key="false" node="container" presence="false">
    <xr-path>/cfg/gl/policymgr/</xr-path>
    <xr-task>qos</xr-task>
    <class-maps config="true" is-key="false" node="container" presence="false">
      <xr-path>/cfg/gl/policymgr/classmap/</xr-path>
      <xr-task>qos</xr-task>
      <class-map config="true" key="type name" node="list">
        <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/</xr-path>
        <xr-task>qos</xr-task>
        <type config="true" is-key="true" is-yang-key="true" node="leaf">
          <xr-data-handler>ignore</xr-data-handler>
          <xr-primitive-type>uint32</xr-primitive-type>
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def</xr-path>
          <xr-task>qos</xr-task>
          <xr-sch-type>PolicymgrClassMapType</xr-sch-type>
          <xr-sch-arg-name>&lt;ctype&gt;</xr-sch-arg-name>
          <type>
            <type-name>Class-map-type</type-name>
          </type>
        </type>
        <name config="true" is-key="true" is-yang-key="true" node="leaf">
          <xr-data-handler>ignore</xr-data-handler>
          <xr-primitive-type>string</xr-primitive-type>
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def</xr-path>
          <xr-task>qos</xr-task>
          <xr-sch-type>EncodedBoundedString</xr-sch-type>
          <xr-sch-arg-name>&lt;name&gt;</xr-sch-arg-name>
          <type>
            <pattern>[a-zA-Z0-9][a-zA-Z0-9\._@$%+#:=&lt;&gt;\-]{0,62}</pattern>
            <type-name>string</type-name>
          </type>
        </name>
        <class-map-mode-match-any config="true" is-key="false" is-yang-key="false" node="leaf">
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~ClassMapModeMatchAny</xr-path>
          <xr-task>qos</xr-task>
          <when>count(../class-map-mode-match-all) = 0</when>
          <type>
            <type-name>empty</type-name>
          </type>
          <xr-bag-primitive-type>string</xr-bag-primitive-type>
        </class-map-mode-match-any>
        <class-map-mode-match-all config="true" is-key="false" is-yang-key="false" node="leaf">
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~ClassMapModeMatchAll</xr-path>
          <xr-task>qos</xr-task>
          <when>count(../class-map-mode-match-any) = 0</when>
          <type>
            <type-name>empty</type-name>
          </type>
          <xr-bag-primitive-type>string</xr-bag-primitive-type>
        </class-map-mode-match-all>
        <match config="true" is-key="false" node="container" presence="false">
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match</xr-path>
          <xr-task>qos</xr-task>
          <atm-clp config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ATM_CLP</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </atm-clp>
          <atm-oam config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ATM_OAM</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </atm-oam>
          <cac-admit config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.CACAdmit</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </cac-admit>
          <cac-unadmit config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.CACUnadmit</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </cac-unadmit>
          <flow config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Flow</xr-path>
            <xr-task>qos</xr-task>
            <flow-key config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Flow.Key[&lt;bag_arg_flow_key&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <pattern>(SourceIP)|(DestinationIP)|(5Tuple)</pattern>
                <type-name>string</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg_flow_key&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flow-key>
            <flow-tag config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Flow.Tag[&lt;bag_arg_flow_tag&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type range="1..63">
                <type-name>uint16</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg_flow_tag&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flow-tag>
            <flow-cache config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Flow.Cache</xr-path>
              <xr-task>qos</xr-task>
              <idle-timeout config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Flow.Cache.IdleTimeout</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Idle-timeout</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </idle-timeout>
            </flow-cache>
          </flow>
          <ipv4-dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.IPV4_DSCP[&lt;bag_arg1&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Dscp-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg1&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-dscp>
          <ipv6-dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.IPV6_DSCP[&lt;bag_arg2&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Dscp-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg2&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-dscp>
          <dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DSCP[&lt;bag_arg3&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Dscp-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg3&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </dscp>
          <ipv4-precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.IPV4Precedence[&lt;bag_arg4&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Precedence</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg4&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-precedence>
          <ipv6-precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.IPV6Precedence[&lt;bag_arg5&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Precedence</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg5&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-precedence>
          <precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Precedence[&lt;bag_arg6&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Precedence</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg6&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </precedence>
          <qos-group config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.QOSGroup[&lt;bag_arg7&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg7&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </qos-group>
          <traffic-class config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.TrafficClass[&lt;bag_arg7&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg7&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </traffic-class>
          <cos config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.COS[&lt;bag_arg8&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg8&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </cos>
          <inner-cos config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.InnerHeaderCOS[&lt;bag_arg9&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg9&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </inner-cos>
          <dei config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DEI</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </dei>
          <dei-inner config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DEIInner</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </dei-inner>
          <protocol config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Protocol[&lt;bag_arg10&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Protocol</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg10&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </protocol>
          <ipv4-acl config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.IPV4AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..64">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-acl>
          <ipv6-acl config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.IPV6AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..64">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-acl>
          <ethernet-services-acl config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.EthernetServicesAccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..64">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ethernet-services-acl>
          <mpls-experimental-topmost config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.MPLSExperimentalTopmost[&lt;bag_arg11&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg11&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-experimental-topmost>
          <mpls-experimental-imposition config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.MPLSExperimentalImposition[&lt;bag_arg12&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg12&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-experimental-imposition>
          <vlan config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.VLAN[&lt;bag_arg13&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg13&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vlan>
          <discard-class config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DiscardClass[&lt;bag_arg_discard_class&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_discard_class&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </discard-class>
          <ipv4-packet-length config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.PacketLengthIPV4[&lt;bag_arg_pkt_ipv4_len&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_pkt_ipv4_len&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-packet-length>
          <ipv6-packet-length config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.PacketLengthIPV6[&lt;bag_arg_pkt_ipv6_len&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_pkt_ipv6_len&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-packet-length>
          <packet-length config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.PacketLength[&lt;bag_arg_pkt_len&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_pkt_len&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </packet-length>
          <mpls-disposition-ipv4-access-list config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.MPLSDispositionIPV4AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-disposition-ipv4-access-list>
          <mpls-disposition-ipv6-access-list config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.MPLSDispositionIPV6AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-disposition-ipv6-access-list>
          <inner-vlan config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.InnerHeaderVLAN[&lt;bag_arg14&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg14&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </inner-vlan>
          <flow-tag config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.FlowTag[&lt;bag_arg_flow_tag&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_flow_tag&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </flow-tag>
          <ethertype config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Ethertype[&lt;bag_arg_ethertype&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Ethertype</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_ethertype&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ethertype>
          <destination-address-ipv4 config="true" key="address netmask" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationAddressIPV4[&lt;dst_ipv4_addr&gt;,&lt;dst_ipv4_mask&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationAddressIPV4[&lt;dst_ipv4_addr&gt;,&lt;dst_ipv4_mask&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv4_addr&gt;</xr-sch-arg-name>
            </address>
            <netmask config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationAddressIPV4[&lt;dst_ipv4_addr&gt;,&lt;dst_ipv4_mask&gt;].Netmask</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv4_mask&gt;</xr-sch-arg-name>
            </netmask>
          </destination-address-ipv4>
          <destination-address-ipv6 config="true" key="address prefix-length" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationAddressIPV6[&lt;dst_ipv6_addr&gt;,&lt;dst_ipv6_prefix&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationAddressIPV6[&lt;dst_ipv6_addr&gt;,&lt;dst_ipv6_prefix&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv6-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv6_addr&gt;</xr-sch-arg-name>
            </address>
            <prefix-length config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationAddressIPV6[&lt;dst_ipv6_addr&gt;,&lt;dst_ipv6_prefix&gt;].PrefixLength</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..128">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv6_prefix&gt;</xr-sch-arg-name>
            </prefix-length>
          </destination-address-ipv6>
          <destination-port config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationPort[&lt;dst_port&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;dst_port&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </destination-port>
          <fragment-type config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.FragmentType.Type[&lt;frag_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <pattern>(dont-fragment)|(first-fragment)|(is-fragment)|(last-fragment)</pattern>
              <type-name>string</type-name>
            </type>
            <max-elements>4</max-elements>
            <xr-internal-key>&lt;frag_type&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </fragment-type>
          <frame-relay-dlci config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.FR_DLCI[&lt;fr_dlci&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;fr_dlci&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </frame-relay-dlci>
          <fr-de config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.FR_DE</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </fr-de>
          <icmpv4-code config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ICMPV4Code[&lt;icmpv4_code&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv4_code&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv4-code>
          <icmpv4-type config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ICMPV4Type[&lt;icmpv4_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv4_type&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv4-type>
          <icmpv6-code config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ICMPV6Code[&lt;icmpv6_code&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv6_code&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv6-code>
          <icmpv6-type config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ICMPV6Type[&lt;icmpv6_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv6_type&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv6-type>
          <source-address-ipv4 config="true" key="address netmask" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceAddressIPV4[&lt;src_ipv4_addr&gt;,&lt;src_ipv4_mask&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceAddressIPV4[&lt;src_ipv4_addr&gt;,&lt;src_ipv4_mask&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv4_addr&gt;</xr-sch-arg-name>
            </address>
            <netmask config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceAddressIPV4[&lt;src_ipv4_addr&gt;,&lt;src_ipv4_mask&gt;].Netmask</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv4_mask&gt;</xr-sch-arg-name>
            </netmask>
          </source-address-ipv4>
          <source-address-ipv6 config="true" key="address prefix-length" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceAddressIPV6[&lt;src_ipv6_addr&gt;,&lt;src_ipv6_prefix&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceAddressIPV6[&lt;src_ipv6_addr&gt;,&lt;src_ipv6_prefix&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv6-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv6_addr&gt;</xr-sch-arg-name>
            </address>
            <prefix-length config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceAddressIPV6[&lt;src_ipv6_addr&gt;,&lt;src_ipv6_prefix&gt;].PrefixLength</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..128">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv6_prefix&gt;</xr-sch-arg-name>
            </prefix-length>
          </source-address-ipv6>
          <source-port config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourcePort[&lt;src_port&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;src_port&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </source-port>
          <tcp-flag config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.TCPFlag.Value</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..4095">
              <type-name>uint16</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </tcp-flag>
          <authen-status config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.AuthenticationStatus</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <pattern>(authenticated)|(unauthenticated)</pattern>
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </authen-status>
          <circuit-id config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.CircuitId[&lt;circuit_id&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;circuit_id&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </circuit-id>
          <circuit-id-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.CircuitIdRegexp[&lt;circuit_id_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;circuit_id_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </circuit-id-regex>
          <dhcp-client-id config="true" key="value flag" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DhcpClientId[&lt;dhcp_client_id&gt;,&lt;dhcp_client_id_flag&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DhcpClientId[&lt;dhcp_client_id&gt;,&lt;dhcp_client_id_flag&gt;].Values</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <flag config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DhcpClientId[&lt;dhcp_client_id&gt;,&lt;dhcp_client_id_flag&gt;].Flags</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>dhcp-client-id-options</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id_flag&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flag>
          </dhcp-client-id>
          <dhcp-client-id-regex config="true" key="value flag" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DhcpClientIdRegexp[&lt;dhcp_client_id_regex&gt;,&lt;dhcp_client_id_flag&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DhcpClientIdRegexp[&lt;dhcp_client_id_regex&gt;,&lt;dhcp_client_id_flag&gt;].Values</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id_regex&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <flag config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DhcpClientIdRegexp[&lt;dhcp_client_id_regex&gt;,&lt;dhcp_client_id_flag&gt;].Flags</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>dhcp-client-id-options</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id_flag&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flag>
          </dhcp-client-id-regex>
          <domain-name config="true" key="name format" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Domain[&lt;domain_name&gt;,&lt;domain_format&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <name config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Domain[&lt;domain_name&gt;,&lt;domain_format&gt;].Name</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_name&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </name>
            <format config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Domain[&lt;domain_name&gt;,&lt;domain_format&gt;].Format</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_format&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </format>
          </domain-name>
          <domain-name-regex config="true" key="regex format" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DomainRegex[&lt;domain_regex&gt;,&lt;domain_format&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <regex config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DomainRegex[&lt;domain_regex&gt;,&lt;domain_format&gt;].Regex</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_regex&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </regex>
            <format config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DomainRegex[&lt;domain_regex&gt;,&lt;domain_format&gt;].Format</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_format&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </format>
          </domain-name-regex>
          <remote-id config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.RemoteId[&lt;remote_id&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;remote_id&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </remote-id>
          <remote-id-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.RemoteIdRegex[&lt;remote_id_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;remote_id_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </remote-id-regex>
          <service-name config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ServiceName[&lt;service_name&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;service_name&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </service-name>
          <service-name-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.ServiceNameRegex[&lt;service_name_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;service_name_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </service-name-regex>
          <timer config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Timer[&lt;timer&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;timer&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </timer>
          <timer-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.TimerRegex[&lt;timer_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;timer_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </timer-regex>
          <user-name config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.Username[&lt;user_name&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;user_name&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </user-name>
          <user-name-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.UsernameRegex[&lt;user_name_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;user_name_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </user-name-regex>
          <source-mac config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.SourceMACAddress[&lt;src_mac_addr&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;src_mac_addr&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </source-mac>
          <destination-mac config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.DestinationMACAddress[&lt;dst_mac_addr&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;dst_mac_addr&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </destination-mac>
          <vpls-control config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.VPLSControl</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-control>
          <vpls-broadcast config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.VPLSBroadcast</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-broadcast>
          <vpls-multicast config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.VPLSMulticast</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-multicast>
          <vpls-known config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.VPLSKnown</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-known>
          <vpls-unknown config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~Match.VPLSUnknown</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-unknown>
        </match>
        <match-not config="true" is-key="false" node="container" presence="false">
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot</xr-path>
          <xr-task>qos</xr-task>
          <flow config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Flow</xr-path>
            <xr-task>qos</xr-task>
            <flow-tag config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Flow.Tag[&lt;bag_arg_flow_tag&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type range="1..63">
                <type-name>uint16</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg_flow_tag&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flow-tag>
          </flow>
          <ipv4-dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.IPV4_DSCP[&lt;bag_arg1&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Dscp-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg1&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-dscp>
          <ipv6-dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.IPV6_DSCP[&lt;bag_arg2&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Dscp-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg2&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-dscp>
          <dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DSCP[&lt;bag_arg3&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Dscp-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg3&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </dscp>
          <ipv4-precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.IPV4Precedence[&lt;bag_arg4&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Precedence</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg4&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-precedence>
          <ipv6-precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.IPV6Precedence[&lt;bag_arg5&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Precedence</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg5&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-precedence>
          <precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Precedence[&lt;bag_arg6&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Precedence</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg6&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </precedence>
          <qos-group config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.QOSGroup[&lt;bag_arg7&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg7&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </qos-group>
          <traffic-class config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.TrafficClass[&lt;bag_arg7&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg7&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </traffic-class>
          <cos config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.COS[&lt;bag_arg8&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg8&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </cos>
          <inner-cos config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.InnerHeaderCOS[&lt;bag_arg9&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg9&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </inner-cos>
          <dei config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DEI</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </dei>
          <dei-inner config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DEIInner</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </dei-inner>
          <protocol config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Protocol[&lt;bag_arg10&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Protocol</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg10&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </protocol>
          <ipv4-acl config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.IPV4AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..64">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-acl>
          <ipv6-acl config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.IPV6AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..64">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-acl>
          <ethernet-services-acl config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.EthernetServicesAccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..64">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ethernet-services-acl>
          <mpls-experimental-topmost config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.MPLSExperimentalTopmost[&lt;bag_arg11&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg11&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-experimental-topmost>
          <mpls-experimental-imposition config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.MPLSExperimentalImposition[&lt;bag_arg12&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg12&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-experimental-imposition>
          <vlan config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.VLAN[&lt;bag_arg13&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg13&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vlan>
          <discard-class config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DiscardClass[&lt;bag_arg_discard_class&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Cos</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_discard_class&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </discard-class>
          <ipv4-packet-length config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.PacketLengthIPV4[&lt;bag_arg_pkt_ipv4_len&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_pkt_ipv4_len&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv4-packet-length>
          <ipv6-packet-length config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.PacketLengthIPV6[&lt;bag_arg_pkt_ipv6_len&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_pkt_ipv6_len&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ipv6-packet-length>
          <packet-length config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.PacketLength[&lt;bag_arg_pkt_len&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_pkt_len&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </packet-length>
          <mpls-disposition-ipv4-access-list config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.MPLSDispositionIPV4AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-disposition-ipv4-access-list>
          <mpls-disposition-ipv6-access-list config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.MPLSDispositionIPV6AccessList</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </mpls-disposition-ipv6-access-list>
          <inner-vlan config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.InnerHeaderVLAN[&lt;bag_arg14&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg14&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </inner-vlan>
          <flow-tag config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.FlowTag[&lt;bag_arg_flow_tag&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_flow_tag&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </flow-tag>
          <ethertype config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Ethertype[&lt;bag_arg_ethertype&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Ethertype</type-name>
            </type>
            <xr-internal-key>&lt;bag_arg_ethertype&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ethertype>
          <destination-address-ipv4 config="true" key="address netmask" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationAddressIPV4[&lt;dst_ipv4_addr&gt;,&lt;dst_ipv4_mask&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationAddressIPV4[&lt;dst_ipv4_addr&gt;,&lt;dst_ipv4_mask&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv4_addr&gt;</xr-sch-arg-name>
            </address>
            <netmask config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationAddressIPV4[&lt;dst_ipv4_addr&gt;,&lt;dst_ipv4_mask&gt;].Netmask</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv4_mask&gt;</xr-sch-arg-name>
            </netmask>
          </destination-address-ipv4>
          <destination-address-ipv6 config="true" key="address prefix-length" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationAddressIPV6[&lt;dst_ipv6_addr&gt;,&lt;dst_ipv6_prefix&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationAddressIPV6[&lt;dst_ipv6_addr&gt;,&lt;dst_ipv6_prefix&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv6-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv6_addr&gt;</xr-sch-arg-name>
            </address>
            <prefix-length config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationAddressIPV6[&lt;dst_ipv6_addr&gt;,&lt;dst_ipv6_prefix&gt;].PrefixLength</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..128">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;dst_ipv6_prefix&gt;</xr-sch-arg-name>
            </prefix-length>
          </destination-address-ipv6>
          <destination-port config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationPort[&lt;dst_port&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;dst_port&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </destination-port>
          <fragment-type config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.FragmentType.Type[&lt;frag_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <pattern>(dont-fragment)|(first-fragment)|(is-fragment)|(last-fragment)</pattern>
              <type-name>string</type-name>
            </type>
            <max-elements>4</max-elements>
            <xr-internal-key>&lt;frag_type&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </fragment-type>
          <frame-relay-dlci config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.FR_DLCI[&lt;fr_dlci&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;fr_dlci&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </frame-relay-dlci>
          <fr-de config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.FR_DE</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..1">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </fr-de>
          <icmpv4-code config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.ICMPV4Code[&lt;icmpv4_code&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv4_code&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv4-code>
          <icmpv4-type config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.ICMPV4Type[&lt;icmpv4_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv4_type&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv4-type>
          <icmpv6-code config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.ICMPV6Code[&lt;icmpv6_code&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv6_code&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv6-code>
          <icmpv6-type config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.ICMPV6Type[&lt;icmpv6_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;icmpv6_type&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </icmpv6-type>
          <source-address-ipv4 config="true" key="address netmask" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceAddressIPV4[&lt;src_ipv4_addr&gt;,&lt;src_ipv4_mask&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceAddressIPV4[&lt;src_ipv4_addr&gt;,&lt;src_ipv4_mask&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv4_addr&gt;</xr-sch-arg-name>
            </address>
            <netmask config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceAddressIPV4[&lt;src_ipv4_addr&gt;,&lt;src_ipv4_mask&gt;].Netmask</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv4_mask&gt;</xr-sch-arg-name>
            </netmask>
          </source-address-ipv4>
          <source-address-ipv6 config="true" key="address prefix-length" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceAddressIPV6[&lt;src_ipv6_addr&gt;,&lt;src_ipv6_prefix&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <address config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceAddressIPV6[&lt;src_ipv6_addr&gt;,&lt;src_ipv6_prefix&gt;].Address</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv6-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv6_addr&gt;</xr-sch-arg-name>
            </address>
            <prefix-length config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceAddressIPV6[&lt;src_ipv6_addr&gt;,&lt;src_ipv6_prefix&gt;].PrefixLength</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..128">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;src_ipv6_prefix&gt;</xr-sch-arg-name>
            </prefix-length>
          </source-address-ipv6>
          <source-port config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourcePort[&lt;src_port&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Num-range</type-name>
            </type>
            <xr-internal-key>&lt;src_port&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </source-port>
          <tcp-flag config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.TCPFlag.Value</xr-path>
            <xr-task>qos</xr-task>
            <type range="0..4095">
              <type-name>uint16</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </tcp-flag>
          <authen-status config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.AuthenticationStatus</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <pattern>(authenticated)|(unauthenticated)</pattern>
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </authen-status>
          <circuit-id config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.CircuitId[&lt;circuit_id&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;circuit_id&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </circuit-id>
          <circuit-id-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.CircuitIdRegexp[&lt;circuit_id_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;circuit_id_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </circuit-id-regex>
          <dhcp-client-id config="true" key="value flag" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DhcpClientId[&lt;dhcp_client_id&gt;,&lt;dhcp_client_id_flag&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DhcpClientId[&lt;dhcp_client_id&gt;,&lt;dhcp_client_id_flag&gt;].Values</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <flag config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DhcpClientId[&lt;dhcp_client_id&gt;,&lt;dhcp_client_id_flag&gt;].Flags</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>dhcp-client-id-options</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id_flag&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flag>
          </dhcp-client-id>
          <dhcp-client-id-regex config="true" key="value flag" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DhcpClientIdRegexp[&lt;dhcp_client_id_regex&gt;,&lt;dhcp_client_id_flag&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DhcpClientIdRegexp[&lt;dhcp_client_id_regex&gt;,&lt;dhcp_client_id_flag&gt;].Values</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id_regex&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <flag config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DhcpClientIdRegexp[&lt;dhcp_client_id_regex&gt;,&lt;dhcp_client_id_flag&gt;].Flags</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>dhcp-client-id-options</type-name>
              </type>
              <xr-sch-arg-name>&lt;dhcp_client_id_flag&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flag>
          </dhcp-client-id-regex>
          <domain-name config="true" key="name format" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Domain[&lt;domain_name&gt;,&lt;domain_format&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <name config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Domain[&lt;domain_name&gt;,&lt;domain_format&gt;].Name</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_name&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </name>
            <format config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Domain[&lt;domain_name&gt;,&lt;domain_format&gt;].Format</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_format&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </format>
          </domain-name>
          <domain-name-regex config="true" key="regex format" node="list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DomainRegex[&lt;domain_regex&gt;,&lt;domain_format&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <regex config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DomainRegex[&lt;domain_regex&gt;,&lt;domain_format&gt;].Regex</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_regex&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </regex>
            <format config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DomainRegex[&lt;domain_regex&gt;,&lt;domain_format&gt;].Format</xr-path>
              <xr-task>qos</xr-task>
              <type length="1..32">
                <type-name>string</type-name>
              </type>
              <xr-sch-arg-name>&lt;domain_format&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </format>
          </domain-name-regex>
          <remote-id config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.RemoteId[&lt;remote_id&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;remote_id&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </remote-id>
          <remote-id-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.RemoteIdRegex[&lt;remote_id_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;remote_id_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </remote-id-regex>
          <service-name config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.ServiceName[&lt;service_name&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;service_name&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </service-name>
          <service-name-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.ServiceNameRegex[&lt;service_name_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;service_name_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </service-name-regex>
          <timer config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Timer[&lt;timer&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;timer&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </timer>
          <timer-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.TimerRegex[&lt;timer_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;timer_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </timer-regex>
          <user-name config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.Username[&lt;user_name&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;user_name&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </user-name>
          <user-name-regex config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.UsernameRegex[&lt;user_name_regex&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type length="1..32">
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;user_name_regex&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </user-name-regex>
          <source-mac config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.SourceMACAddress[&lt;src_mac_addr&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;src_mac_addr&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </source-mac>
          <destination-mac config="true" is-key="false" is-yang-key="false" node="leaf-list">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.DestinationMACAddress[&lt;dst_mac_addr&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-internal-key>&lt;dst_mac_addr&gt;</xr-internal-key>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </destination-mac>
          <vpls-control config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.VPLSControl</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-control>
          <vpls-broadcast config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.VPLSBroadcast</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-broadcast>
          <vpls-multicast config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.VPLSMulticast</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-multicast>
          <vpls-known config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.VPLSKnown</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-known>
          <vpls-unknown config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~MatchNot.VPLSUnknown</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </vpls-unknown>
        </match-not>
        <description config="true" is-key="false" is-yang-key="false" node="leaf">
          <xr-path>/cfg/gl/policymgr/classmap/type/&lt;ctype&gt;/name/&lt;name&gt;/def~ClassMapDescription</xr-path>
          <xr-task>qos</xr-task>
          <type>
            <type-name>string</type-name>
          </type>
          <xr-bag-primitive-type>string</xr-bag-primitive-type>
        </description>
      </class-map>
    </class-maps>
    <policy-maps config="true" is-key="false" node="container" presence="false">
      <xr-path>/cfg/gl/policymgr/policymap/</xr-path>
      <xr-task>qos</xr-task>
      <policy-map config="true" key="type name" node="list">
        <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/</xr-path>
        <xr-task>qos</xr-task>
        <type config="true" is-key="true" is-yang-key="true" node="leaf">
          <xr-data-handler>ignore</xr-data-handler>
          <xr-primitive-type>uint32</xr-primitive-type>
          <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def</xr-path>
          <xr-task>qos</xr-task>
          <xr-sch-type>PolicymgrPolicyMapType</xr-sch-type>
          <xr-sch-arg-name>&lt;ptype&gt;</xr-sch-arg-name>
          <type>
            <type-name>Policy-map-type</type-name>
          </type>
        </type>
        <name config="true" is-key="true" is-yang-key="true" node="leaf">
          <xr-data-handler>ignore</xr-data-handler>
          <xr-primitive-type>string</xr-primitive-type>
          <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def</xr-path>
          <xr-task>qos</xr-task>
          <xr-sch-type>EncodedBoundedString</xr-sch-type>
          <xr-sch-arg-name>&lt;name&gt;</xr-sch-arg-name>
          <type>
            <pattern>[a-zA-Z0-9][a-zA-Z0-9\._@$%+#:=&lt;&gt;\-]{0,62}</pattern>
            <type-name>string</type-name>
          </type>
        </name>
        <event config="true" key="event-type" node="list">
          <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;]</xr-path>
          <xr-task>qos</xr-task>
          <event-type config="true" is-key="true" is-yang-key="true" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Type</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Event-type</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
            <xr-sch-arg-name>&lt;event_type&gt;</xr-sch-arg-name>
          </event-type>
          <event-mode-match-all config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].EventModeMatchAll</xr-path>
            <xr-task>qos</xr-task>
            <when>count(../event-mode-match-first) = 0</when>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </event-mode-match-all>
          <event-mode-match-first config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].EventModeMatchFirst</xr-path>
            <xr-task>qos</xr-task>
            <when>count(../event-mode-match-all) = 0</when>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </event-mode-match-first>
          <class config="true" key="class-name class-type" node="list">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <class-name config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ClassNaming.ClassName</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <pattern>[a-zA-Z0-9][a-zA-Z0-9\._@$%+#:=&lt;&gt;\-]{0,62}</pattern>
                <type-name>string</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;event_class_name&gt;</xr-sch-arg-name>
            </class-name>
            <class-type config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ClassNaming.Type</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Pmap-class-map-type</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-sch-arg-name>&lt;event_class_type&gt;</xr-sch-arg-name>
            </class-type>
            <class-execution-strategy config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ClassExecutionStrategy</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Execution-strategy</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </class-execution-strategy>
            <action-rule config="true" key="action-sequence-number" node="list">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <action-sequence-number config="true" is-key="true" is-yang-key="true" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].ActionSequenceNumber</xr-path>
                <xr-task>qos</xr-task>
                <type range="1..65535">
                  <type-name>uint16</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
                <xr-sch-arg-name>&lt;action_seq_num&gt;</xr-sch-arg-name>
              </action-sequence-number>
              <activate-dynamic-template config="true" is-key="false" node="container" presence="true">
                <xr-data-handler>ignore</xr-data-handler>
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].ActivateDynamicTemplate</xr-path>
                <xr-task>qos</xr-task>
                <name config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].ActivateDynamicTemplate.Name</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <mandatory>true</mandatory>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </name>
                <aaa-list config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].ActivateDynamicTemplate.AAAList</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </aaa-list>
              </activate-dynamic-template>
              <authenticate config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authenticate</xr-path>
                <xr-task>qos</xr-task>
                <aaa-list config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authenticate.AAAList</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </aaa-list>
              </authenticate>
              <authorize config="true" is-key="false" node="container" presence="true">
                <xr-data-handler>ignore</xr-data-handler>
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authorize</xr-path>
                <xr-task>qos</xr-task>
                <must>format or identifier</must>
                <aaa-list config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authorize.AAAList</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <mandatory>true</mandatory>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </aaa-list>
                <format config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authorize.Format</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </format>
                <identifier config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authorize.Identifier</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Authorize-identifier</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </identifier>
                <password config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Authorize.Password</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <mandatory>true</mandatory>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </password>
              </authorize>
              <deactivate-dynamic-template config="true" is-key="false" node="container" presence="true">
                <xr-data-handler>ignore</xr-data-handler>
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].DeactivateDynamicTemplate</xr-path>
                <xr-task>qos</xr-task>
                <name config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].DeactivateDynamicTemplate.Name</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <mandatory>true</mandatory>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </name>
                <aaa-list config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].DeactivateDynamicTemplate.AAAList</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </aaa-list>
              </deactivate-dynamic-template>
              <disconnect config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Disconnect</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </disconnect>
              <monitor config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].Monitor</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </monitor>
              <set-timer config="true" is-key="false" node="container" presence="true">
                <xr-data-handler>ignore</xr-data-handler>
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].SetTimer</xr-path>
                <xr-task>qos</xr-task>
                <timer-name config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].SetTimer.TimerName</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <mandatory>true</mandatory>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </timer-name>
                <timer-value config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].SetTimer.Minutes</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>uint32</type-name>
                  </type>
                  <mandatory>true</mandatory>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </timer-value>
              </set-timer>
              <stop-timer config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].StopTimer</xr-path>
                <xr-task>qos</xr-task>
                <timer-name config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Event[&lt;event_type&gt;].Class[&lt;event_class_name&gt;,&lt;event_class_type&gt;].ActionRule[&lt;action_seq_num&gt;].StopTimer.TimerName</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </timer-name>
              </stop-timer>
            </action-rule>
          </class>
        </event>
        <policy-map-rule config="true" key="class-name class-type" node="list">
          <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;]</xr-path>
          <xr-task>qos</xr-task>
          <class-name config="true" is-key="true" is-yang-key="true" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ClassNaming.ClassName</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <pattern>[a-zA-Z0-9][a-zA-Z0-9\._@$%+#:=&lt;&gt;\-]{0,62}</pattern>
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
            <xr-sch-arg-name>&lt;pmap_class_name&gt;</xr-sch-arg-name>
          </class-name>
          <class-type config="true" is-key="true" is-yang-key="true" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ClassNaming.Type</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>Pmap-class-map-type</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
            <xr-sch-arg-name>&lt;pmap_class_type&gt;</xr-sch-arg-name>
          </class-type>
          <shape config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape</xr-path>
            <xr-task>qos</xr-task>
            <must>rate</must>
            <rate config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape.Rate</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape.Rate.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../unit</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <unit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape.Rate.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Bandwidth-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </unit>
            </rate>
            <burst config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape.Burst</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape.Burst.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Shape.Burst.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Threshold-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </burst>
          </shape>
          <min-bandwidth config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MinBandwidth</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MinBandwidth.Value</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <must>../unit</must>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <unit config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MinBandwidth.Unit</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Bandwidth-units</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </unit>
          </min-bandwidth>
          <bandwidth-remaining config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].BandwidthRemaining</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].BandwidthRemaining.Value</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <must>../unit</must>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <unit config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].BandwidthRemaining.Unit</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Bandwidth-remaining-units</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </unit>
          </bandwidth-remaining>
          <queue-limit config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].QueueLimit.Threshold</xr-path>
            <xr-task>qos</xr-task>
            <value config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].QueueLimit.Threshold.Value</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <must>../unit</must>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </value>
            <unit config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].QueueLimit.Threshold.Unit</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Queue-units</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </unit>
          </queue-limit>
          <pfc config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <pfc-pause-set config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.PauseSet</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </pfc-pause-set>
            <pfc-buffer-size config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.BufferSize</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.BufferSize.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../unit</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <unit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.BufferSize.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Pfc-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </unit>
            </pfc-buffer-size>
            <pfc-pause-threshold config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.PauseThreshold</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.PauseThreshold.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../unit</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <unit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.PauseThreshold.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Pfc-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </unit>
            </pfc-pause-threshold>
            <pfc-resume-threshold config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.ResumeThreshold</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.ResumeThreshold.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../unit</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <unit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PFC.ResumeThreshold.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Pfc-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </unit>
            </pfc-resume-threshold>
          </pfc>
          <priority-level config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Priority.Level</xr-path>
            <xr-task>qos</xr-task>
            <type range="1..7">
              <type-name>uint8</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </priority-level>
          <default-red config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect.Default</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </default-red>
          <ecn-red config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect.ECN</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </ecn-red>
          <random-detect config="true" key="threshold-min-value threshold-min-units threshold-max-value threshold-max-units" node="list">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;]</xr-path>
            <xr-task>qos</xr-task>
            <threshold-min-value config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].MinimumThreshold.Value</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <xr-sch-arg-name>&lt;red_min_val&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </threshold-min-value>
            <threshold-min-units config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].MinimumThreshold.Unit</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Threshold-units</type-name>
              </type>
              <xr-sch-arg-name>&lt;red_min_u&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </threshold-min-units>
            <threshold-max-value config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].MaximumThreshold.Value</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <xr-sch-arg-name>&lt;red_max_val&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </threshold-max-value>
            <threshold-max-units config="true" is-key="true" is-yang-key="true" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].MaximumThreshold.Unit</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Threshold-units</type-name>
              </type>
              <xr-sch-arg-name>&lt;red_max_u&gt;</xr-sch-arg-name>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </threshold-max-units>
            <cos config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].COS.Value[&lt;bag_arg16&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Dscp-range</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg16&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </cos>
            <discard-class config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].DiscardClass.Value[&lt;bag_arg17&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Cos</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg17&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </discard-class>
            <dscp config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].DSCP.Value[&lt;bag_arg18&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Dscp-range</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg18&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </dscp>
            <mpls-exp config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].Experimental.Value[&lt;bag_arg19&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Cos</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg19&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </mpls-exp>
            <precedence config="true" is-key="false" is-yang-key="false" node="leaf-list">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].Precedence.Value[&lt;bag_arg20&gt;]</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Precedence</type-name>
              </type>
              <xr-internal-key>&lt;bag_arg20&gt;</xr-internal-key>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </precedence>
            <dei config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].DEI.Value</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..1">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </dei>
            <ecn config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].RandomDetect[&lt;red_min_val&gt;,&lt;red_min_u&gt;,&lt;red_max_val&gt;,&lt;red_max_u&gt;].ECN</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </ecn>
          </random-detect>
          <set config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set</xr-path>
            <xr-task>qos</xr-task>
            <dscp config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.DSCP</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Dscp</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </dscp>
            <qos-group config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.QOSGroup</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..512">
                <type-name>uint16</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </qos-group>
            <traffic-class config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.TrafficClass</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..63">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </traffic-class>
            <discard-class config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.DiscardClass</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </discard-class>
            <forward-class config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.ForwardClass</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </forward-class>
            <df config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.DF</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..1">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </df>
            <cos config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.COS</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </cos>
            <inner-cos config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.InnerHeaderCOS</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </inner-cos>
            <precedence config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.Precedence</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Precedence</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </precedence>
            <precedence-tunnel config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.PrecedenceTunnel</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Precedence</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </precedence-tunnel>
            <mpls-experimental-top-most config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.MPLSExperimentalTopmost</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </mpls-experimental-top-most>
            <mpls-experimental-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.MPLSExperimentalImposition</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </mpls-experimental-imposition>
            <srp-priority config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.SrpPriority</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..7">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </srp-priority>
            <fr-de config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.FR_DE</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..1">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </fr-de>
            <dei config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.DEI</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..1">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </dei>
            <dei-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.DEIImposition</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..1">
                <type-name>uint8</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </dei-imposition>
            <source-address config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.SourceAddressIPV4</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </source-address>
            <destination-address config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Set.DestinationAddressIPV4</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>inet:ipv4-address-no-zone</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </destination-address>
          </set>
          <police config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police</xr-path>
            <xr-task>qos</xr-task>
            <must>rate</must>
            <rate config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.Rate</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.Rate.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.Rate.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Rate-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </rate>
            <peak-rate config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.PeakRate</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.PeakRate.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.PeakRate.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Rate-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </peak-rate>
            <burst config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.Burst</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.Burst.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.Burst.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Threshold-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </burst>
            <peak-burst config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.PeakBurst</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.PeakBurst.Value</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.PeakBurst.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Threshold-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </peak-burst>
            <conform-action config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction</xr-path>
              <xr-task>qos</xr-task>
              <Transmit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Transmit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </Transmit>
              <drop config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Drop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </drop>
              <set config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set</xr-path>
                <xr-task>qos</xr-task>
                <dscp config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.DSCP</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Dscp</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dscp>
                <qos-group config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.QOSGroup</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..512">
                    <type-name>uint16</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </qos-group>
                <traffic-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.TrafficClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..63">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </traffic-class>
                <discard-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.DiscardClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </discard-class>
                <forward-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.ForwardClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </forward-class>
                <df config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.DF</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </df>
                <cos config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.COS</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </cos>
                <inner-cos config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.InnerHeaderCOS</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </inner-cos>
                <precedence config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.Precedence</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Precedence</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </precedence>
                <precedence-tunnel config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.PrecedenceTunnel</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Precedence</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </precedence-tunnel>
                <mpls-experimental-top-most config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.MPLSExperimentalTopmost</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </mpls-experimental-top-most>
                <mpls-experimental-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.MPLSExperimentalImposition</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </mpls-experimental-imposition>
                <srp-priority config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.SrpPriority</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </srp-priority>
                <fr-de config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.FR_DE</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </fr-de>
                <dei config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.DEI</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dei>
                <dei-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.DEIImposition</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dei-imposition>
                <source-address config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.SourceAddressIPV4</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>inet:ipv4-address-no-zone</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </source-address>
                <destination-address config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ConformAction.Set.DestinationAddressIPV4</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>inet:ipv4-address-no-zone</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </destination-address>
              </set>
            </conform-action>
            <exceed-action config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction</xr-path>
              <xr-task>qos</xr-task>
              <Transmit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Transmit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </Transmit>
              <drop config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Drop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </drop>
              <set config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set</xr-path>
                <xr-task>qos</xr-task>
                <dscp config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.DSCP</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Dscp</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dscp>
                <qos-group config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.QOSGroup</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..512">
                    <type-name>uint16</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </qos-group>
                <traffic-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.TrafficClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..63">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </traffic-class>
                <discard-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.DiscardClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </discard-class>
                <forward-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.ForwardClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </forward-class>
                <df config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.DF</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </df>
                <cos config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.COS</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </cos>
                <inner-cos config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.InnerHeaderCOS</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </inner-cos>
                <precedence config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.Precedence</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Precedence</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </precedence>
                <precedence-tunnel config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.PrecedenceTunnel</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Precedence</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </precedence-tunnel>
                <mpls-experimental-top-most config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.MPLSExperimentalTopmost</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </mpls-experimental-top-most>
                <mpls-experimental-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.MPLSExperimentalImposition</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </mpls-experimental-imposition>
                <srp-priority config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.SrpPriority</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </srp-priority>
                <fr-de config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.FR_DE</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </fr-de>
                <dei config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.DEI</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dei>
                <dei-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.DEIImposition</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dei-imposition>
                <source-address config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.SourceAddressIPV4</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>inet:ipv4-address-no-zone</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </source-address>
                <destination-address config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ExceedAction.Set.DestinationAddressIPV4</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>inet:ipv4-address-no-zone</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </destination-address>
              </set>
            </exceed-action>
            <violate-action config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction</xr-path>
              <xr-task>qos</xr-task>
              <Transmit config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Transmit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </Transmit>
              <drop config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Drop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </drop>
              <set config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set</xr-path>
                <xr-task>qos</xr-task>
                <dscp config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.DSCP</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Dscp</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dscp>
                <qos-group config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.QOSGroup</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..512">
                    <type-name>uint16</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </qos-group>
                <traffic-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.TrafficClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..63">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </traffic-class>
                <discard-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.DiscardClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </discard-class>
                <forward-class config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.ForwardClass</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </forward-class>
                <df config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.DF</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </df>
                <cos config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.COS</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </cos>
                <inner-cos config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.InnerHeaderCOS</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </inner-cos>
                <precedence config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.Precedence</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Precedence</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </precedence>
                <precedence-tunnel config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.PrecedenceTunnel</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>Precedence</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </precedence-tunnel>
                <mpls-experimental-top-most config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.MPLSExperimentalTopmost</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </mpls-experimental-top-most>
                <mpls-experimental-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.MPLSExperimentalImposition</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </mpls-experimental-imposition>
                <srp-priority config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.SrpPriority</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..7">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </srp-priority>
                <fr-de config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.FR_DE</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </fr-de>
                <dei config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.DEI</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dei>
                <dei-imposition config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.DEIImposition</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..1">
                    <type-name>uint8</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </dei-imposition>
                <source-address config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.SourceAddressIPV4</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>inet:ipv4-address-no-zone</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </source-address>
                <destination-address config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Police.ViolateAction.Set.DestinationAddressIPV4</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>inet:ipv4-address-no-zone</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </destination-address>
              </set>
            </violate-action>
          </police>
          <service-policy config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServicePolicy</xr-path>
            <xr-task>qos</xr-task>
            <policy-name config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServicePolicy.PolicyName</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <pattern>[a-zA-Z0-9][a-zA-Z0-9\._@$%+#:=&lt;&gt;\-]{0,62}</pattern>
                <type-name>string</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </policy-name>
            <type config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServicePolicy.Type</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Service-policy-type</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </type>
          </service-policy>
          <cac-local config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local</xr-path>
            <xr-task>qos</xr-task>
            <rate config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.Rate</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.Rate.Value</xr-path>
                <xr-task>qos</xr-task>
                <type range="1..4294967295">
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.Rate.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Cac-rate-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </rate>
            <flow-rate config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.FlowRate</xr-path>
              <xr-task>qos</xr-task>
              <value config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.FlowRate.Value</xr-path>
                <xr-task>qos</xr-task>
                <type range="1..4294967295">
                  <type-name>uint32</type-name>
                </type>
                <must>../units</must>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </value>
              <units config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.FlowRate.Unit</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Cac-rate-units</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </units>
            </flow-rate>
            <flow-idle-timeout config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Local.FlowIdleTimeout</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>Idle-timeout</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </flow-idle-timeout>
          </cac-local>
          <flow-params config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].FlowParams</xr-path>
            <xr-task>qos</xr-task>
            <max-flow config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].FlowParams.Flow</xr-path>
              <xr-task>qos</xr-task>
              <type range="0..4096">
                <type-name>uint16</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </max-flow>
            <interval-duration config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].FlowParams.IntervalDuration</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </interval-duration>
            <history config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].FlowParams.History</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </history>
            <timeout config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].FlowParams.Timeout</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>uint32</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </timeout>
          </flow-params>
          <metrics-ipcbr config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr</xr-path>
            <xr-task>qos</xr-task>
            <rate config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Rate</xr-path>
              <xr-task>qos</xr-task>
              <layer3 config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Rate.Layer3</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </layer3>
              <packet config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Rate.Packet</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint32</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </packet>
              <media config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Rate.Media</xr-path>
                <xr-task>qos</xr-task>
                <type range="1..3000000000">
                  <type-name>uint32</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </media>
            </rate>
            <media-packet config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Media</xr-path>
              <xr-task>qos</xr-task>
              <size config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Media.Packets.Size</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>uint16</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </size>
              <count-in-layer3 config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].MetricsIpcbr.Media.Packets.Count.InLayer3</xr-path>
                <xr-task>qos</xr-task>
                <type range="1..64">
                  <type-name>uint8</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </count-in-layer3>
            </media-packet>
          </metrics-ipcbr>
          <react config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React</xr-path>
            <xr-task>qos</xr-task>
            <descrition config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Descripition</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>string</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </descrition>
            <action config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Action</xr-path>
              <xr-task>qos</xr-task>
              <syslog config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Action.Syslog</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </syslog>
              <snmp config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Action.Snmp</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>empty</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </snmp>
            </action>
            <alarm config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Alarm</xr-path>
              <xr-task>qos</xr-task>
              <type config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Alarm.Type</xr-path>
                <xr-task>qos</xr-task>
                <discrete config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Alarm.Type.Discrete</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>empty</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </discrete>
                <group-count config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Alarm.Type.GroupCount</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>uint16</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </group-count>
                <group-percent config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Alarm.Type.GroupPercent</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>uint16</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </group-percent>
              </type>
              <severity config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Alarm.Severity</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>Alarm-severity</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </severity>
            </alarm>
            <threshold config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold</xr-path>
              <xr-task>qos</xr-task>
              <trigger-value config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Value</xr-path>
                <xr-task>qos</xr-task>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
                <greater-than config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Value.GreaterThan</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </greater-than>
                <greater-than-equal config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Value.GreaterThanEqual</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </greater-than-equal>
                <less-than config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Value.LessThan</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </less-than>
                <less-than-equal config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Value.LessThanEqual</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </less-than-equal>
                <range config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Value.Range</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>string</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </range>
              </trigger-value>
              <trigger-type config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Type</xr-path>
                <xr-task>qos</xr-task>
                <immediate config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Type.Immediate</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>empty</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </immediate>
                <average config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Threshold.Type.Average</xr-path>
                  <xr-task>qos</xr-task>
                  <type>
                    <type-name>uint32</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </average>
              </trigger-type>
            </threshold>
            <criterion-delay-factor config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.DelayFactor</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </criterion-delay-factor>
            <criterion-media-stop config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.MediaStop</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </criterion-media-stop>
            <criterion-mrv config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.Mrv</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </criterion-mrv>
            <criterion-flow-count config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.FlowCount</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </criterion-flow-count>
            <criterion-packet-rate config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].React.PacketRate</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </criterion-packet-rate>
          </react>
          <http-redirect config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].HTTPRedirect</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </http-redirect>
          <pbr-transmit config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRTransmit</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </pbr-transmit>
          <pbr-drop config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRDrop</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </pbr-drop>
          <decap-gre config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].DecapGRE</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>empty</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </decap-gre>
          <pbr-redirect config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect</xr-path>
            <xr-task>qos</xr-task>
            <ipv4 config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.IPv4</xr-path>
              <xr-task>qos</xr-task>
              <ipv4-next-hop config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.IPv4.NextHop.IPv4NextHop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>inet:ipv4-address-no-zone</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </ipv4-next-hop>
              <vrf config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.IPv4.NextHop.VRF</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>string</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </vrf>
            </ipv4>
            <ipv6 config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.IPv6</xr-path>
              <xr-task>qos</xr-task>
              <ipv6-next-hop config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.IPv6.NextHop.IPv6NextHop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>inet:ipv6-address-no-zone</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </ipv6-next-hop>
              <vrf config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.IPv6.NextHop.VRF</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>string</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </vrf>
            </ipv6>
            <next-hop config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop</xr-path>
              <xr-task>qos</xr-task>
              <route-target config="true" is-key="false" node="container" presence="false">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop.RouteTarget</xr-path>
                <xr-task>qos</xr-task>
                <ipv4-address config="true" is-key="false" node="container" presence="false">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop.RouteTarget.IPV4Address</xr-path>
                  <xr-task>qos</xr-task>
                  <address config="true" is-key="false" is-yang-key="false" node="leaf">
                    <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop.RouteTarget.IPV4Address.Address</xr-path>
                    <xr-task>qos</xr-task>
                    <type>
                      <type-name>inet:ipv4-address-no-zone</type-name>
                    </type>
                    <xr-bag-primitive-type>string</xr-bag-primitive-type>
                  </address>
                  <netmask config="true" is-key="false" is-yang-key="false" node="leaf">
                    <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop.RouteTarget.IPV4Address.Netmask</xr-path>
                    <xr-task>qos</xr-task>
                    <type>
                      <type-name>string</type-name>
                    </type>
                    <xr-bag-primitive-type>string</xr-bag-primitive-type>
                  </netmask>
                </ipv4-address>
                <as-number config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop.RouteTarget.AS_XX</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="1..4294967295">
                    <type-name>uint32</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </as-number>
                <index config="true" is-key="false" is-yang-key="false" node="leaf">
                  <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Redirect.NextHop.RouteTarget.AS_YY</xr-path>
                  <xr-task>qos</xr-task>
                  <type range="0..4294967295">
                    <type-name>uint32</type-name>
                  </type>
                  <xr-bag-primitive-type>string</xr-bag-primitive-type>
                </index>
              </route-target>
            </next-hop>
          </pbr-redirect>
          <pbr-forward config="true" is-key="false" node="container" presence="false">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRForward</xr-path>
            <xr-task>qos</xr-task>
            <default config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRForward.Default</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </default>
            <next-hop config="true" is-key="false" node="container" presence="false">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRForward.NextHop</xr-path>
              <xr-task>qos</xr-task>
              <vrf config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRForward.NextHop.VRF</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>string</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </vrf>
              <ipv4-address config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRForward.NextHop.IPv4NextHop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>inet:ipv4-address</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </ipv4-address>
              <ipv6-address config="true" is-key="false" is-yang-key="false" node="leaf">
                <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].PBRForward.NextHop.IPv6NextHop</xr-path>
                <xr-task>qos</xr-task>
                <type>
                  <type-name>inet:ipv6-address</type-name>
                </type>
                <xr-bag-primitive-type>string</xr-bag-primitive-type>
              </ipv6-address>
            </next-hop>
          </pbr-forward>
          <service-fragment config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServiceFragment</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </service-fragment>
          <fragment config="true" is-key="false" is-yang-key="false" node="leaf">
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].Fragment</xr-path>
            <xr-task>qos</xr-task>
            <type>
              <type-name>string</type-name>
            </type>
            <xr-bag-primitive-type>string</xr-bag-primitive-type>
          </fragment>
          <service-function-path config="true" is-key="false" node="container" presence="true">
            <xr-data-handler>ignore</xr-data-handler>
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServiceFunctionPath</xr-path>
            <xr-task>qos</xr-task>
            <path-id config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServiceFunctionPath.PathId</xr-path>
              <xr-task>qos</xr-task>
              <type range="1..16777215">
                <type-name>uint32</type-name>
              </type>
              <mandatory>true</mandatory>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </path-id>
            <index config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServiceFunctionPath.Index</xr-path>
              <xr-task>qos</xr-task>
              <type range="1..255">
                <type-name>uint8</type-name>
              </type>
              <mandatory>true</mandatory>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </index>
            <metadata config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].ServiceFunctionPath.Metadata</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>string</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </metadata>
          </service-function-path>
          <http-enrichment config="true" is-key="false" node="container" presence="true">
            <xr-data-handler>ignore</xr-data-handler>
            <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].HTTPEnrichment</xr-path>
            <xr-task>qos</xr-task>
            <subscribermac config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].HTTPEnrichment.SubscriberMac</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </subscribermac>
            <subscriberip config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].HTTPEnrichment.SubscriberIP</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </subscriberip>
            <hostname config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].HTTPEnrichment.BngHostName</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </hostname>
            <bngidentifierinterface config="true" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~Class[&lt;pmap_class_name&gt;,&lt;pmap_class_type&gt;].HTTPEnrichment.BngIdentifierInterface</xr-path>
              <xr-task>qos</xr-task>
              <type>
                <type-name>empty</type-name>
              </type>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
            </bngidentifierinterface>
          </http-enrichment>
        </policy-map-rule>
        <description config="true" is-key="false" is-yang-key="false" node="leaf">
          <xr-path>/cfg/gl/policymgr/policymap/type/&lt;ptype&gt;/name/&lt;name&gt;/def~PolicyMapDescription</xr-path>
          <xr-task>qos</xr-task>
          <type>
            <type-name>string</type-name>
          </type>
          <xr-bag-primitive-type>string</xr-bag-primitive-type>
        </description>
      </policy-map>
    </policy-maps>
  </policy-manager>
</Cisco-IOS-XR-infra-policymgr-cfg>
