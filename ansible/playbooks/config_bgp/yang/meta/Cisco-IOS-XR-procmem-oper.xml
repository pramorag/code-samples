<?xml version="1.0"?>
<Cisco-IOS-XR-procmem-oper ns="http://cisco.com/ns/yang/Cisco-IOS-XR-procmem-oper" revision="2017-09-07">
  <files>
    <file revision="2017-09-07" submodule="false">Cisco-IOS-XR-procmem-oper.yang</file>
    <file revision="2017-09-07" submodule="true">Cisco-IOS-XR-procmem-oper-sub1.yang</file>
  </files>
  <prefix>procmem-oper</prefix>
  <organization>Cisco Systems, Inc.</organization>
  <import prefix="xr">Cisco-IOS-XR-types</import>
  <processes-memory config="false" is-key="false" node="container" presence="false">
    <xr-path>/oper/processmemory_linux/</xr-path>
    <xr-xml-map>sh_proc_mem_oper:ProcessesMemory</xr-xml-map>
    <xr-task>basic-services</xr-task>
    <nodes config="false" is-key="false" node="container" presence="false">
      <xr-path>/oper/processmemory_linux/node/</xr-path>
      <xr-xml-map>sh_proc_mem_oper:NodeTable</xr-xml-map>
      <xr-task>basic-services</xr-task>
      <node config="false" key="node-name" node="list">
        <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/</xr-path>
        <xr-xml-map>sh_proc_mem_oper:Node</xr-xml-map>
        <xr-task>basic-services</xr-task>
        <process-ids config="false" is-key="false" node="container" presence="false">
          <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/</xr-path>
          <xr-xml-map>sh_proc_mem_oper:ProcessTable</xr-xml-map>
          <xr-task>basic-services</xr-task>
          <process-id config="false" key="process-id" node="list">
            <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;</xr-path>
            <xr-xml-map>sh_proc_mem_oper:ProcessId</xr-xml-map>
            <xr-task>basic-services</xr-task>
            <xr-bag-grp-name>processesmemory_entry</xr-bag-grp-name>
            <xr-bag>sh_proc_mem.bag</xr-bag>
            <process-id config="false" is-key="true" is-yang-key="true" node="leaf">
              <xr-data-handler>ignore</xr-data-handler>
              <xr-pathformat>hex_nozerox</xr-pathformat>
              <xr-primitive-type>uint32</xr-primitive-type>
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;</xr-path>
              <xr-xml-map>sh_proc_mem_oper:ProcessId</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-sch-type>Integer</xr-sch-type>
              <xr-sch-arg-name>&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;</xr-sch-arg-name>
              <type>
                <type-name>uint32</type-name>
              </type>
            </process-id>
            <name config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.Name</xr-path>
              <xr-xml-map>sh_proc_mem:Name</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>string</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>string</type-name>
              </type>
            </name>
            <jid config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.JID</xr-path>
              <xr-xml-map>sh_proc_mem:JID</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </jid>
            <pid config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.PID</xr-path>
              <xr-xml-map>sh_proc_mem:PID</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </pid>
            <text-seg-size config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.text_seg_size</xr-path>
              <xr-xml-map>sh_proc_mem:text_seg_size</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </text-seg-size>
            <data-seg-size config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.data_seg_size</xr-path>
              <xr-xml-map>sh_proc_mem:data_seg_size</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </data-seg-size>
            <stack-seg-size config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.stack_seg_size</xr-path>
              <xr-xml-map>sh_proc_mem:stack_seg_size</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </stack-seg-size>
            <malloc-size config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.malloc_size</xr-path>
              <xr-xml-map>sh_proc_mem:malloc_size</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </malloc-size>
            <dyn-limit config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.dyn_limit</xr-path>
              <xr-xml-map>sh_proc_mem:dyn_limit</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </dyn-limit>
            <shared-mem config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.shared_mem</xr-path>
              <xr-xml-map>sh_proc_mem:shared_mem</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </shared-mem>
            <physical-mem config="false" is-key="false" is-yang-key="false" node="leaf">
              <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/proc/&lt;sh_proc_mem_oper_ProcessId_proc_id&gt;~processesmemory_entry.physical_mem</xr-path>
              <xr-xml-map>sh_proc_mem:physical_mem</xr-xml-map>
              <xr-task>basic-services</xr-task>
              <xr-bag-primitive-type>uint32_t</xr-bag-primitive-type>
              <xr-bag-version>1 2</xr-bag-version>
              <type>
                <type-name>uint32</type-name>
              </type>
            </physical-mem>
          </process-id>
        </process-ids>
        <node-name config="false" is-key="true" is-yang-key="true" node="leaf">
          <xr-data-handler>ignore</xr-data-handler>
          <xr-pathformat>hex_nozerox</xr-pathformat>
          <xr-primitive-type>uint32</xr-primitive-type>
          <xr-path>/oper/processmemory_linux/node/&lt;sh_proc_mem_oper_Node_node-id&gt;/</xr-path>
          <xr-xml-map>sh_proc_mem_oper:NodeName</xr-xml-map>
          <xr-task>basic-services</xr-task>
          <xr-sch-type>NodeID</xr-sch-type>
          <xr-sch-arg-name>&lt;sh_proc_mem_oper_Node_node-id&gt;</xr-sch-arg-name>
          <type>
            <type-name>xr:Node-id</type-name>
          </type>
        </node-name>
      </node>
    </nodes>
  </processes-memory>
</Cisco-IOS-XR-procmem-oper>
